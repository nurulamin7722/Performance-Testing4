/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 50.0, "minX": 0.0, "maxY": 17209.0, "series": [{"data": [[0.0, 50.0], [0.1, 50.0], [0.2, 50.0], [0.3, 51.0], [0.4, 51.0], [0.5, 52.0], [0.6, 52.0], [0.7, 52.0], [0.8, 52.0], [0.9, 52.0], [1.0, 52.0], [1.1, 52.0], [1.2, 52.0], [1.3, 52.0], [1.4, 53.0], [1.5, 53.0], [1.6, 53.0], [1.7, 53.0], [1.8, 53.0], [1.9, 53.0], [2.0, 53.0], [2.1, 53.0], [2.2, 53.0], [2.3, 53.0], [2.4, 53.0], [2.5, 53.0], [2.6, 53.0], [2.7, 53.0], [2.8, 53.0], [2.9, 53.0], [3.0, 54.0], [3.1, 54.0], [3.2, 54.0], [3.3, 54.0], [3.4, 54.0], [3.5, 54.0], [3.6, 54.0], [3.7, 54.0], [3.8, 54.0], [3.9, 54.0], [4.0, 54.0], [4.1, 54.0], [4.2, 54.0], [4.3, 55.0], [4.4, 55.0], [4.5, 55.0], [4.6, 55.0], [4.7, 55.0], [4.8, 55.0], [4.9, 55.0], [5.0, 55.0], [5.1, 55.0], [5.2, 55.0], [5.3, 55.0], [5.4, 55.0], [5.5, 55.0], [5.6, 55.0], [5.7, 56.0], [5.8, 56.0], [5.9, 56.0], [6.0, 56.0], [6.1, 56.0], [6.2, 56.0], [6.3, 56.0], [6.4, 56.0], [6.5, 56.0], [6.6, 56.0], [6.7, 56.0], [6.8, 56.0], [6.9, 56.0], [7.0, 56.0], [7.1, 56.0], [7.2, 56.0], [7.3, 56.0], [7.4, 56.0], [7.5, 56.0], [7.6, 56.0], [7.7, 56.0], [7.8, 56.0], [7.9, 56.0], [8.0, 57.0], [8.1, 57.0], [8.2, 57.0], [8.3, 57.0], [8.4, 57.0], [8.5, 57.0], [8.6, 57.0], [8.7, 57.0], [8.8, 57.0], [8.9, 57.0], [9.0, 57.0], [9.1, 57.0], [9.2, 57.0], [9.3, 57.0], [9.4, 57.0], [9.5, 57.0], [9.6, 57.0], [9.7, 57.0], [9.8, 57.0], [9.9, 57.0], [10.0, 58.0], [10.1, 58.0], [10.2, 58.0], [10.3, 58.0], [10.4, 58.0], [10.5, 58.0], [10.6, 58.0], [10.7, 58.0], [10.8, 58.0], [10.9, 58.0], [11.0, 58.0], [11.1, 58.0], [11.2, 58.0], [11.3, 58.0], [11.4, 58.0], [11.5, 58.0], [11.6, 58.0], [11.7, 58.0], [11.8, 58.0], [11.9, 58.0], [12.0, 58.0], [12.1, 58.0], [12.2, 58.0], [12.3, 58.0], [12.4, 58.0], [12.5, 58.0], [12.6, 58.0], [12.7, 58.0], [12.8, 58.0], [12.9, 58.0], [13.0, 58.0], [13.1, 58.0], [13.2, 58.0], [13.3, 59.0], [13.4, 59.0], [13.5, 59.0], [13.6, 59.0], [13.7, 59.0], [13.8, 59.0], [13.9, 59.0], [14.0, 59.0], [14.1, 59.0], [14.2, 59.0], [14.3, 59.0], [14.4, 59.0], [14.5, 59.0], [14.6, 59.0], [14.7, 59.0], [14.8, 59.0], [14.9, 59.0], [15.0, 59.0], [15.1, 59.0], [15.2, 59.0], [15.3, 59.0], [15.4, 59.0], [15.5, 59.0], [15.6, 59.0], [15.7, 59.0], [15.8, 59.0], [15.9, 59.0], [16.0, 59.0], [16.1, 59.0], [16.2, 59.0], [16.3, 59.0], [16.4, 59.0], [16.5, 60.0], [16.6, 60.0], [16.7, 60.0], [16.8, 60.0], [16.9, 60.0], [17.0, 60.0], [17.1, 60.0], [17.2, 60.0], [17.3, 60.0], [17.4, 60.0], [17.5, 60.0], [17.6, 60.0], [17.7, 60.0], [17.8, 60.0], [17.9, 60.0], [18.0, 60.0], [18.1, 60.0], [18.2, 60.0], [18.3, 60.0], [18.4, 60.0], [18.5, 60.0], [18.6, 60.0], [18.7, 60.0], [18.8, 61.0], [18.9, 61.0], [19.0, 61.0], [19.1, 61.0], [19.2, 61.0], [19.3, 61.0], [19.4, 61.0], [19.5, 61.0], [19.6, 61.0], [19.7, 61.0], [19.8, 61.0], [19.9, 61.0], [20.0, 61.0], [20.1, 61.0], [20.2, 61.0], [20.3, 61.0], [20.4, 61.0], [20.5, 61.0], [20.6, 61.0], [20.7, 61.0], [20.8, 61.0], [20.9, 61.0], [21.0, 61.0], [21.1, 61.0], [21.2, 61.0], [21.3, 61.0], [21.4, 61.0], [21.5, 61.0], [21.6, 61.0], [21.7, 61.0], [21.8, 61.0], [21.9, 61.0], [22.0, 61.0], [22.1, 61.0], [22.2, 61.0], [22.3, 61.0], [22.4, 61.0], [22.5, 61.0], [22.6, 61.0], [22.7, 61.0], [22.8, 62.0], [22.9, 62.0], [23.0, 62.0], [23.1, 62.0], [23.2, 62.0], [23.3, 62.0], [23.4, 62.0], [23.5, 62.0], [23.6, 62.0], [23.7, 62.0], [23.8, 62.0], [23.9, 62.0], [24.0, 62.0], [24.1, 62.0], [24.2, 62.0], [24.3, 62.0], [24.4, 62.0], [24.5, 62.0], [24.6, 62.0], [24.7, 62.0], [24.8, 62.0], [24.9, 62.0], [25.0, 62.0], [25.1, 62.0], [25.2, 62.0], [25.3, 62.0], [25.4, 62.0], [25.5, 62.0], [25.6, 62.0], [25.7, 63.0], [25.8, 63.0], [25.9, 63.0], [26.0, 63.0], [26.1, 63.0], [26.2, 63.0], [26.3, 63.0], [26.4, 63.0], [26.5, 63.0], [26.6, 63.0], [26.7, 63.0], [26.8, 63.0], [26.9, 63.0], [27.0, 63.0], [27.1, 63.0], [27.2, 63.0], [27.3, 63.0], [27.4, 63.0], [27.5, 63.0], [27.6, 63.0], [27.7, 63.0], [27.8, 63.0], [27.9, 63.0], [28.0, 63.0], [28.1, 63.0], [28.2, 64.0], [28.3, 64.0], [28.4, 64.0], [28.5, 64.0], [28.6, 64.0], [28.7, 64.0], [28.8, 64.0], [28.9, 64.0], [29.0, 64.0], [29.1, 64.0], [29.2, 64.0], [29.3, 64.0], [29.4, 64.0], [29.5, 64.0], [29.6, 64.0], [29.7, 64.0], [29.8, 64.0], [29.9, 64.0], [30.0, 64.0], [30.1, 64.0], [30.2, 64.0], [30.3, 64.0], [30.4, 64.0], [30.5, 64.0], [30.6, 65.0], [30.7, 65.0], [30.8, 65.0], [30.9, 65.0], [31.0, 65.0], [31.1, 65.0], [31.2, 65.0], [31.3, 65.0], [31.4, 65.0], [31.5, 65.0], [31.6, 65.0], [31.7, 65.0], [31.8, 65.0], [31.9, 65.0], [32.0, 65.0], [32.1, 65.0], [32.2, 65.0], [32.3, 65.0], [32.4, 65.0], [32.5, 65.0], [32.6, 65.0], [32.7, 65.0], [32.8, 65.0], [32.9, 65.0], [33.0, 65.0], [33.1, 65.0], [33.2, 65.0], [33.3, 65.0], [33.4, 65.0], [33.5, 65.0], [33.6, 65.0], [33.7, 65.0], [33.8, 65.0], [33.9, 65.0], [34.0, 65.0], [34.1, 65.0], [34.2, 66.0], [34.3, 66.0], [34.4, 66.0], [34.5, 66.0], [34.6, 66.0], [34.7, 66.0], [34.8, 66.0], [34.9, 66.0], [35.0, 66.0], [35.1, 66.0], [35.2, 66.0], [35.3, 66.0], [35.4, 66.0], [35.5, 66.0], [35.6, 66.0], [35.7, 66.0], [35.8, 66.0], [35.9, 66.0], [36.0, 66.0], [36.1, 66.0], [36.2, 66.0], [36.3, 66.0], [36.4, 66.0], [36.5, 66.0], [36.6, 66.0], [36.7, 66.0], [36.8, 66.0], [36.9, 66.0], [37.0, 66.0], [37.1, 66.0], [37.2, 66.0], [37.3, 66.0], [37.4, 66.0], [37.5, 67.0], [37.6, 67.0], [37.7, 67.0], [37.8, 67.0], [37.9, 67.0], [38.0, 67.0], [38.1, 67.0], [38.2, 67.0], [38.3, 67.0], [38.4, 67.0], [38.5, 67.0], [38.6, 67.0], [38.7, 67.0], [38.8, 67.0], [38.9, 67.0], [39.0, 67.0], [39.1, 67.0], [39.2, 67.0], [39.3, 67.0], [39.4, 67.0], [39.5, 67.0], [39.6, 67.0], [39.7, 67.0], [39.8, 67.0], [39.9, 67.0], [40.0, 67.0], [40.1, 67.0], [40.2, 68.0], [40.3, 68.0], [40.4, 68.0], [40.5, 68.0], [40.6, 68.0], [40.7, 68.0], [40.8, 68.0], [40.9, 68.0], [41.0, 68.0], [41.1, 68.0], [41.2, 68.0], [41.3, 68.0], [41.4, 68.0], [41.5, 68.0], [41.6, 68.0], [41.7, 68.0], [41.8, 68.0], [41.9, 68.0], [42.0, 68.0], [42.1, 68.0], [42.2, 68.0], [42.3, 68.0], [42.4, 68.0], [42.5, 68.0], [42.6, 68.0], [42.7, 68.0], [42.8, 68.0], [42.9, 68.0], [43.0, 68.0], [43.1, 68.0], [43.2, 68.0], [43.3, 68.0], [43.4, 68.0], [43.5, 68.0], [43.6, 68.0], [43.7, 68.0], [43.8, 68.0], [43.9, 68.0], [44.0, 68.0], [44.1, 68.0], [44.2, 68.0], [44.3, 68.0], [44.4, 68.0], [44.5, 69.0], [44.6, 69.0], [44.7, 69.0], [44.8, 69.0], [44.9, 69.0], [45.0, 69.0], [45.1, 69.0], [45.2, 69.0], [45.3, 69.0], [45.4, 69.0], [45.5, 69.0], [45.6, 69.0], [45.7, 69.0], [45.8, 69.0], [45.9, 69.0], [46.0, 69.0], [46.1, 69.0], [46.2, 69.0], [46.3, 69.0], [46.4, 69.0], [46.5, 69.0], [46.6, 69.0], [46.7, 69.0], [46.8, 69.0], [46.9, 69.0], [47.0, 69.0], [47.1, 69.0], [47.2, 69.0], [47.3, 70.0], [47.4, 70.0], [47.5, 70.0], [47.6, 70.0], [47.7, 70.0], [47.8, 70.0], [47.9, 70.0], [48.0, 70.0], [48.1, 70.0], [48.2, 70.0], [48.3, 70.0], [48.4, 70.0], [48.5, 70.0], [48.6, 70.0], [48.7, 70.0], [48.8, 70.0], [48.9, 70.0], [49.0, 70.0], [49.1, 70.0], [49.2, 70.0], [49.3, 70.0], [49.4, 71.0], [49.5, 71.0], [49.6, 71.0], [49.7, 71.0], [49.8, 71.0], [49.9, 71.0], [50.0, 71.0], [50.1, 71.0], [50.2, 71.0], [50.3, 71.0], [50.4, 71.0], [50.5, 71.0], [50.6, 71.0], [50.7, 71.0], [50.8, 71.0], [50.9, 71.0], [51.0, 71.0], [51.1, 71.0], [51.2, 71.0], [51.3, 71.0], [51.4, 71.0], [51.5, 71.0], [51.6, 71.0], [51.7, 72.0], [51.8, 72.0], [51.9, 72.0], [52.0, 72.0], [52.1, 72.0], [52.2, 72.0], [52.3, 72.0], [52.4, 72.0], [52.5, 72.0], [52.6, 72.0], [52.7, 72.0], [52.8, 72.0], [52.9, 72.0], [53.0, 72.0], [53.1, 72.0], [53.2, 72.0], [53.3, 72.0], [53.4, 72.0], [53.5, 72.0], [53.6, 72.0], [53.7, 72.0], [53.8, 72.0], [53.9, 72.0], [54.0, 72.0], [54.1, 73.0], [54.2, 73.0], [54.3, 73.0], [54.4, 73.0], [54.5, 73.0], [54.6, 73.0], [54.7, 73.0], [54.8, 73.0], [54.9, 73.0], [55.0, 73.0], [55.1, 73.0], [55.2, 73.0], [55.3, 73.0], [55.4, 73.0], [55.5, 73.0], [55.6, 73.0], [55.7, 73.0], [55.8, 73.0], [55.9, 73.0], [56.0, 73.0], [56.1, 74.0], [56.2, 74.0], [56.3, 74.0], [56.4, 74.0], [56.5, 74.0], [56.6, 74.0], [56.7, 74.0], [56.8, 74.0], [56.9, 74.0], [57.0, 74.0], [57.1, 74.0], [57.2, 74.0], [57.3, 74.0], [57.4, 74.0], [57.5, 74.0], [57.6, 74.0], [57.7, 74.0], [57.8, 74.0], [57.9, 74.0], [58.0, 74.0], [58.1, 74.0], [58.2, 74.0], [58.3, 74.0], [58.4, 74.0], [58.5, 74.0], [58.6, 74.0], [58.7, 74.0], [58.8, 74.0], [58.9, 74.0], [59.0, 74.0], [59.1, 74.0], [59.2, 74.0], [59.3, 75.0], [59.4, 75.0], [59.5, 75.0], [59.6, 75.0], [59.7, 75.0], [59.8, 75.0], [59.9, 75.0], [60.0, 75.0], [60.1, 75.0], [60.2, 75.0], [60.3, 75.0], [60.4, 75.0], [60.5, 75.0], [60.6, 75.0], [60.7, 75.0], [60.8, 75.0], [60.9, 75.0], [61.0, 75.0], [61.1, 75.0], [61.2, 75.0], [61.3, 75.0], [61.4, 76.0], [61.5, 76.0], [61.6, 76.0], [61.7, 76.0], [61.8, 76.0], [61.9, 76.0], [62.0, 76.0], [62.1, 76.0], [62.2, 76.0], [62.3, 76.0], [62.4, 76.0], [62.5, 76.0], [62.6, 76.0], [62.7, 76.0], [62.8, 76.0], [62.9, 76.0], [63.0, 76.0], [63.1, 76.0], [63.2, 76.0], [63.3, 77.0], [63.4, 77.0], [63.5, 77.0], [63.6, 77.0], [63.7, 77.0], [63.8, 77.0], [63.9, 77.0], [64.0, 77.0], [64.1, 77.0], [64.2, 77.0], [64.3, 77.0], [64.4, 77.0], [64.5, 77.0], [64.6, 77.0], [64.7, 77.0], [64.8, 77.0], [64.9, 77.0], [65.0, 77.0], [65.1, 77.0], [65.2, 77.0], [65.3, 77.0], [65.4, 78.0], [65.5, 78.0], [65.6, 78.0], [65.7, 78.0], [65.8, 78.0], [65.9, 78.0], [66.0, 78.0], [66.1, 78.0], [66.2, 78.0], [66.3, 78.0], [66.4, 78.0], [66.5, 78.0], [66.6, 78.0], [66.7, 78.0], [66.8, 78.0], [66.9, 78.0], [67.0, 79.0], [67.1, 79.0], [67.2, 79.0], [67.3, 79.0], [67.4, 79.0], [67.5, 79.0], [67.6, 80.0], [67.7, 80.0], [67.8, 80.0], [67.9, 80.0], [68.0, 80.0], [68.1, 80.0], [68.2, 80.0], [68.3, 80.0], [68.4, 80.0], [68.5, 80.0], [68.6, 81.0], [68.7, 81.0], [68.8, 81.0], [68.9, 81.0], [69.0, 81.0], [69.1, 81.0], [69.2, 81.0], [69.3, 81.0], [69.4, 81.0], [69.5, 81.0], [69.6, 81.0], [69.7, 82.0], [69.8, 82.0], [69.9, 82.0], [70.0, 82.0], [70.1, 82.0], [70.2, 82.0], [70.3, 82.0], [70.4, 82.0], [70.5, 83.0], [70.6, 83.0], [70.7, 83.0], [70.8, 83.0], [70.9, 83.0], [71.0, 83.0], [71.1, 83.0], [71.2, 84.0], [71.3, 84.0], [71.4, 84.0], [71.5, 84.0], [71.6, 85.0], [71.7, 85.0], [71.8, 85.0], [71.9, 85.0], [72.0, 85.0], [72.1, 86.0], [72.2, 86.0], [72.3, 86.0], [72.4, 87.0], [72.5, 87.0], [72.6, 87.0], [72.7, 87.0], [72.8, 87.0], [72.9, 87.0], [73.0, 88.0], [73.1, 88.0], [73.2, 89.0], [73.3, 89.0], [73.4, 89.0], [73.5, 89.0], [73.6, 90.0], [73.7, 90.0], [73.8, 90.0], [73.9, 90.0], [74.0, 90.0], [74.1, 90.0], [74.2, 90.0], [74.3, 91.0], [74.4, 91.0], [74.5, 91.0], [74.6, 91.0], [74.7, 91.0], [74.8, 91.0], [74.9, 91.0], [75.0, 92.0], [75.1, 92.0], [75.2, 92.0], [75.3, 93.0], [75.4, 93.0], [75.5, 94.0], [75.6, 94.0], [75.7, 95.0], [75.8, 95.0], [75.9, 95.0], [76.0, 95.0], [76.1, 96.0], [76.2, 97.0], [76.3, 97.0], [76.4, 98.0], [76.5, 99.0], [76.6, 100.0], [76.7, 103.0], [76.8, 103.0], [76.9, 103.0], [77.0, 104.0], [77.1, 104.0], [77.2, 105.0], [77.3, 105.0], [77.4, 106.0], [77.5, 108.0], [77.6, 108.0], [77.7, 109.0], [77.8, 111.0], [77.9, 112.0], [78.0, 113.0], [78.1, 116.0], [78.2, 116.0], [78.3, 117.0], [78.4, 117.0], [78.5, 119.0], [78.6, 130.0], [78.7, 132.0], [78.8, 133.0], [78.9, 134.0], [79.0, 135.0], [79.1, 137.0], [79.2, 145.0], [79.3, 147.0], [79.4, 147.0], [79.5, 155.0], [79.6, 159.0], [79.7, 166.0], [79.8, 167.0], [79.9, 170.0], [80.0, 170.0], [80.1, 172.0], [80.2, 174.0], [80.3, 174.0], [80.4, 175.0], [80.5, 175.0], [80.6, 176.0], [80.7, 177.0], [80.8, 179.0], [80.9, 180.0], [81.0, 180.0], [81.1, 183.0], [81.2, 183.0], [81.3, 183.0], [81.4, 183.0], [81.5, 185.0], [81.6, 185.0], [81.7, 186.0], [81.8, 187.0], [81.9, 189.0], [82.0, 190.0], [82.1, 190.0], [82.2, 192.0], [82.3, 192.0], [82.4, 192.0], [82.5, 192.0], [82.6, 193.0], [82.7, 193.0], [82.8, 193.0], [82.9, 194.0], [83.0, 194.0], [83.1, 194.0], [83.2, 195.0], [83.3, 195.0], [83.4, 195.0], [83.5, 195.0], [83.6, 196.0], [83.7, 196.0], [83.8, 196.0], [83.9, 196.0], [84.0, 196.0], [84.1, 196.0], [84.2, 196.0], [84.3, 197.0], [84.4, 197.0], [84.5, 197.0], [84.6, 197.0], [84.7, 197.0], [84.8, 197.0], [84.9, 198.0], [85.0, 198.0], [85.1, 198.0], [85.2, 199.0], [85.3, 199.0], [85.4, 199.0], [85.5, 199.0], [85.6, 199.0], [85.7, 199.0], [85.8, 199.0], [85.9, 200.0], [86.0, 200.0], [86.1, 200.0], [86.2, 200.0], [86.3, 200.0], [86.4, 200.0], [86.5, 201.0], [86.6, 202.0], [86.7, 202.0], [86.8, 202.0], [86.9, 202.0], [87.0, 204.0], [87.1, 204.0], [87.2, 204.0], [87.3, 204.0], [87.4, 204.0], [87.5, 204.0], [87.6, 204.0], [87.7, 206.0], [87.8, 206.0], [87.9, 207.0], [88.0, 207.0], [88.1, 208.0], [88.2, 209.0], [88.3, 209.0], [88.4, 209.0], [88.5, 211.0], [88.6, 212.0], [88.7, 213.0], [88.8, 235.0], [88.9, 237.0], [89.0, 237.0], [89.1, 238.0], [89.2, 238.0], [89.3, 240.0], [89.4, 240.0], [89.5, 247.0], [89.6, 256.0], [89.7, 259.0], [89.8, 261.0], [89.9, 261.0], [90.0, 265.0], [90.1, 271.0], [90.2, 272.0], [90.3, 274.0], [90.4, 279.0], [90.5, 298.0], [90.6, 313.0], [90.7, 313.0], [90.8, 314.0], [90.9, 315.0], [91.0, 316.0], [91.1, 316.0], [91.2, 316.0], [91.3, 316.0], [91.4, 317.0], [91.5, 317.0], [91.6, 317.0], [91.7, 318.0], [91.8, 319.0], [91.9, 319.0], [92.0, 319.0], [92.1, 321.0], [92.2, 321.0], [92.3, 324.0], [92.4, 324.0], [92.5, 325.0], [92.6, 325.0], [92.7, 325.0], [92.8, 326.0], [92.9, 327.0], [93.0, 329.0], [93.1, 330.0], [93.2, 330.0], [93.3, 330.0], [93.4, 331.0], [93.5, 331.0], [93.6, 332.0], [93.7, 333.0], [93.8, 333.0], [93.9, 334.0], [94.0, 334.0], [94.1, 335.0], [94.2, 336.0], [94.3, 336.0], [94.4, 337.0], [94.5, 338.0], [94.6, 339.0], [94.7, 340.0], [94.8, 341.0], [94.9, 342.0], [95.0, 343.0], [95.1, 343.0], [95.2, 343.0], [95.3, 344.0], [95.4, 345.0], [95.5, 346.0], [95.6, 346.0], [95.7, 348.0], [95.8, 348.0], [95.9, 349.0], [96.0, 351.0], [96.1, 351.0], [96.2, 351.0], [96.3, 351.0], [96.4, 352.0], [96.5, 364.0], [96.6, 365.0], [96.7, 366.0], [96.8, 374.0], [96.9, 379.0], [97.0, 392.0], [97.1, 395.0], [97.2, 405.0], [97.3, 408.0], [97.4, 409.0], [97.5, 409.0], [97.6, 417.0], [97.7, 421.0], [97.8, 425.0], [97.9, 426.0], [98.0, 432.0], [98.1, 444.0], [98.2, 448.0], [98.3, 450.0], [98.4, 451.0], [98.5, 454.0], [98.6, 456.0], [98.7, 477.0], [98.8, 480.0], [98.9, 525.0], [99.0, 575.0], [99.1, 582.0], [99.2, 610.0], [99.3, 611.0], [99.4, 625.0], [99.5, 672.0], [99.6, 684.0], [99.7, 739.0], [99.8, 809.0], [99.9, 885.0]], "isOverall": false, "label": "https://reqres.in/api/users/2", "isController": false}, {"data": [[0.0, 1700.0], [0.1, 1825.0], [0.2, 1827.0], [0.3, 1827.0], [0.4, 1923.0], [0.5, 1957.0], [0.6, 1991.0], [0.7, 1995.0], [0.8, 1997.0], [0.9, 1999.0], [1.0, 2004.0], [1.1, 2022.0], [1.2, 2026.0], [1.3, 2089.0], [1.4, 2089.0], [1.5, 2213.0], [1.6, 2232.0], [1.7, 2244.0], [1.8, 2247.0], [1.9, 2257.0], [2.0, 2298.0], [2.1, 2314.0], [2.2, 2335.0], [2.3, 2342.0], [2.4, 2352.0], [2.5, 2359.0], [2.6, 2359.0], [2.7, 2360.0], [2.8, 2406.0], [2.9, 2415.0], [3.0, 2467.0], [3.1, 2468.0], [3.2, 2476.0], [3.3, 2486.0], [3.4, 2488.0], [3.5, 2523.0], [3.6, 2567.0], [3.7, 2597.0], [3.8, 2641.0], [3.9, 2652.0], [4.0, 2724.0], [4.1, 2771.0], [4.2, 2779.0], [4.3, 2787.0], [4.4, 2916.0], [4.5, 2939.0], [4.6, 3024.0], [4.7, 3116.0], [4.8, 3117.0], [4.9, 3118.0], [5.0, 3142.0], [5.1, 3145.0], [5.2, 3174.0], [5.3, 3212.0], [5.4, 3229.0], [5.5, 3264.0], [5.6, 3269.0], [5.7, 3330.0], [5.8, 3468.0], [5.9, 3492.0], [6.0, 3497.0], [6.1, 3518.0], [6.2, 3564.0], [6.3, 3568.0], [6.4, 3581.0], [6.5, 3592.0], [6.6, 3605.0], [6.7, 3615.0], [6.8, 3647.0], [6.9, 3669.0], [7.0, 3671.0], [7.1, 3750.0], [7.2, 3765.0], [7.3, 3788.0], [7.4, 3811.0], [7.5, 3854.0], [7.6, 3911.0], [7.7, 3920.0], [7.8, 4076.0], [7.9, 4090.0], [8.0, 4099.0], [8.1, 4114.0], [8.2, 4128.0], [8.3, 4155.0], [8.4, 4170.0], [8.5, 4184.0], [8.6, 4307.0], [8.7, 4318.0], [8.8, 4329.0], [8.9, 4359.0], [9.0, 4368.0], [9.1, 4389.0], [9.2, 4390.0], [9.3, 4435.0], [9.4, 4447.0], [9.5, 4447.0], [9.6, 4463.0], [9.7, 4480.0], [9.8, 4489.0], [9.9, 4523.0], [10.0, 4526.0], [10.1, 4537.0], [10.2, 4569.0], [10.3, 4601.0], [10.4, 4621.0], [10.5, 4631.0], [10.6, 4635.0], [10.7, 4635.0], [10.8, 4637.0], [10.9, 4640.0], [11.0, 4647.0], [11.1, 4647.0], [11.2, 4680.0], [11.3, 4689.0], [11.4, 4695.0], [11.5, 4721.0], [11.6, 4730.0], [11.7, 4742.0], [11.8, 4743.0], [11.9, 4745.0], [12.0, 4745.0], [12.1, 4746.0], [12.2, 4747.0], [12.3, 4748.0], [12.4, 4751.0], [12.5, 4752.0], [12.6, 4753.0], [12.7, 4754.0], [12.8, 4755.0], [12.9, 4756.0], [13.0, 4763.0], [13.1, 4766.0], [13.2, 4771.0], [13.3, 4773.0], [13.4, 4775.0], [13.5, 4777.0], [13.6, 4790.0], [13.7, 4794.0], [13.8, 4795.0], [13.9, 4821.0], [14.0, 4821.0], [14.1, 4904.0], [14.2, 4907.0], [14.3, 4908.0], [14.4, 4953.0], [14.5, 5029.0], [14.6, 5073.0], [14.7, 5176.0], [14.8, 5191.0], [14.9, 5196.0], [15.0, 5211.0], [15.1, 5242.0], [15.2, 5269.0], [15.3, 5278.0], [15.4, 5301.0], [15.5, 5341.0], [15.6, 5341.0], [15.7, 5365.0], [15.8, 5369.0], [15.9, 5378.0], [16.0, 5380.0], [16.1, 5380.0], [16.2, 5385.0], [16.3, 5387.0], [16.4, 5392.0], [16.5, 5394.0], [16.6, 5395.0], [16.7, 5396.0], [16.8, 5407.0], [16.9, 5417.0], [17.0, 5417.0], [17.1, 5417.0], [17.2, 5418.0], [17.3, 5419.0], [17.4, 5421.0], [17.5, 5425.0], [17.6, 5427.0], [17.7, 5432.0], [17.8, 5434.0], [17.9, 5434.0], [18.0, 5435.0], [18.1, 5437.0], [18.2, 5442.0], [18.3, 5443.0], [18.4, 5445.0], [18.5, 5463.0], [18.6, 5463.0], [18.7, 5472.0], [18.8, 5477.0], [18.9, 5534.0], [19.0, 5578.0], [19.1, 5578.0], [19.2, 5604.0], [19.3, 5610.0], [19.4, 5620.0], [19.5, 5624.0], [19.6, 5626.0], [19.7, 5638.0], [19.8, 5658.0], [19.9, 5690.0], [20.0, 5698.0], [20.1, 5699.0], [20.2, 5699.0], [20.3, 5703.0], [20.4, 5706.0], [20.5, 5709.0], [20.6, 5710.0], [20.7, 5711.0], [20.8, 5720.0], [20.9, 5720.0], [21.0, 5728.0], [21.1, 5735.0], [21.2, 5749.0], [21.3, 5756.0], [21.4, 5774.0], [21.5, 5811.0], [21.6, 5839.0], [21.7, 5848.0], [21.8, 5870.0], [21.9, 5876.0], [22.0, 5884.0], [22.1, 5898.0], [22.2, 5901.0], [22.3, 5916.0], [22.4, 5919.0], [22.5, 5921.0], [22.6, 5990.0], [22.7, 6023.0], [22.8, 6034.0], [22.9, 6065.0], [23.0, 6107.0], [23.1, 6118.0], [23.2, 6134.0], [23.3, 6149.0], [23.4, 6149.0], [23.5, 6179.0], [23.6, 6190.0], [23.7, 6208.0], [23.8, 6217.0], [23.9, 6226.0], [24.0, 6259.0], [24.1, 6269.0], [24.2, 6283.0], [24.3, 6292.0], [24.4, 6315.0], [24.5, 6359.0], [24.6, 6410.0], [24.7, 6422.0], [24.8, 6432.0], [24.9, 6441.0], [25.0, 6492.0], [25.1, 6496.0], [25.2, 6551.0], [25.3, 6552.0], [25.4, 6576.0], [25.5, 6592.0], [25.6, 6604.0], [25.7, 6621.0], [25.8, 6687.0], [25.9, 6688.0], [26.0, 6713.0], [26.1, 6733.0], [26.2, 6741.0], [26.3, 6797.0], [26.4, 6866.0], [26.5, 6881.0], [26.6, 6885.0], [26.7, 6890.0], [26.8, 6892.0], [26.9, 6894.0], [27.0, 6908.0], [27.1, 6934.0], [27.2, 6937.0], [27.3, 6963.0], [27.4, 6967.0], [27.5, 6982.0], [27.6, 7021.0], [27.7, 7048.0], [27.8, 7050.0], [27.9, 7066.0], [28.0, 7068.0], [28.1, 7072.0], [28.2, 7106.0], [28.3, 7130.0], [28.4, 7196.0], [28.5, 7199.0], [28.6, 7227.0], [28.7, 7235.0], [28.8, 7241.0], [28.9, 7260.0], [29.0, 7260.0], [29.1, 7266.0], [29.2, 7278.0], [29.3, 7279.0], [29.4, 7292.0], [29.5, 7296.0], [29.6, 7298.0], [29.7, 7300.0], [29.8, 7361.0], [29.9, 7366.0], [30.0, 7375.0], [30.1, 7377.0], [30.2, 7381.0], [30.3, 7384.0], [30.4, 7402.0], [30.5, 7402.0], [30.6, 7419.0], [30.7, 7429.0], [30.8, 7434.0], [30.9, 7452.0], [31.0, 7456.0], [31.1, 7457.0], [31.2, 7465.0], [31.3, 7471.0], [31.4, 7518.0], [31.5, 7519.0], [31.6, 7529.0], [31.7, 7573.0], [31.8, 7577.0], [31.9, 7586.0], [32.0, 7607.0], [32.1, 7613.0], [32.2, 7636.0], [32.3, 7653.0], [32.4, 7679.0], [32.5, 7683.0], [32.6, 7708.0], [32.7, 7709.0], [32.8, 7713.0], [32.9, 7729.0], [33.0, 7746.0], [33.1, 7748.0], [33.2, 7788.0], [33.3, 7815.0], [33.4, 7824.0], [33.5, 7829.0], [33.6, 7835.0], [33.7, 7856.0], [33.8, 7859.0], [33.9, 7864.0], [34.0, 7870.0], [34.1, 7874.0], [34.2, 7895.0], [34.3, 7897.0], [34.4, 7912.0], [34.5, 7922.0], [34.6, 7964.0], [34.7, 7991.0], [34.8, 7994.0], [34.9, 7998.0], [35.0, 8034.0], [35.1, 8041.0], [35.2, 8057.0], [35.3, 8064.0], [35.4, 8072.0], [35.5, 8090.0], [35.6, 8108.0], [35.7, 8109.0], [35.8, 8111.0], [35.9, 8173.0], [36.0, 8226.0], [36.1, 8239.0], [36.2, 8254.0], [36.3, 8264.0], [36.4, 8265.0], [36.5, 8274.0], [36.6, 8309.0], [36.7, 8312.0], [36.8, 8363.0], [36.9, 8366.0], [37.0, 8378.0], [37.1, 8474.0], [37.2, 8484.0], [37.3, 8494.0], [37.4, 8495.0], [37.5, 8522.0], [37.6, 8533.0], [37.7, 8592.0], [37.8, 8625.0], [37.9, 8645.0], [38.0, 8649.0], [38.1, 8674.0], [38.2, 8720.0], [38.3, 8720.0], [38.4, 8729.0], [38.5, 8807.0], [38.6, 8829.0], [38.7, 8886.0], [38.8, 8891.0], [38.9, 8909.0], [39.0, 8914.0], [39.1, 8936.0], [39.2, 8956.0], [39.3, 8966.0], [39.4, 8972.0], [39.5, 8980.0], [39.6, 8988.0], [39.7, 9015.0], [39.8, 9049.0], [39.9, 9052.0], [40.0, 9058.0], [40.1, 9065.0], [40.2, 9071.0], [40.3, 9100.0], [40.4, 9104.0], [40.5, 9104.0], [40.6, 9108.0], [40.7, 9156.0], [40.8, 9195.0], [40.9, 9209.0], [41.0, 9215.0], [41.1, 9230.0], [41.2, 9267.0], [41.3, 9271.0], [41.4, 9279.0], [41.5, 9290.0], [41.6, 9303.0], [41.7, 9311.0], [41.8, 9317.0], [41.9, 9322.0], [42.0, 9332.0], [42.1, 9334.0], [42.2, 9346.0], [42.3, 9365.0], [42.4, 9372.0], [42.5, 9381.0], [42.6, 9394.0], [42.7, 9402.0], [42.8, 9402.0], [42.9, 9410.0], [43.0, 9430.0], [43.1, 9430.0], [43.2, 9437.0], [43.3, 9438.0], [43.4, 9441.0], [43.5, 9458.0], [43.6, 9471.0], [43.7, 9480.0], [43.8, 9483.0], [43.9, 9486.0], [44.0, 9492.0], [44.1, 9509.0], [44.2, 9517.0], [44.3, 9518.0], [44.4, 9524.0], [44.5, 9529.0], [44.6, 9532.0], [44.7, 9540.0], [44.8, 9553.0], [44.9, 9554.0], [45.0, 9582.0], [45.1, 9592.0], [45.2, 9601.0], [45.3, 9615.0], [45.4, 9621.0], [45.5, 9625.0], [45.6, 9628.0], [45.7, 9635.0], [45.8, 9646.0], [45.9, 9659.0], [46.0, 9666.0], [46.1, 9668.0], [46.2, 9674.0], [46.3, 9697.0], [46.4, 9697.0], [46.5, 9708.0], [46.6, 9713.0], [46.7, 9714.0], [46.8, 9718.0], [46.9, 9720.0], [47.0, 9723.0], [47.1, 9731.0], [47.2, 9744.0], [47.3, 9755.0], [47.4, 9755.0], [47.5, 9761.0], [47.6, 9767.0], [47.7, 9769.0], [47.8, 9786.0], [47.9, 9799.0], [48.0, 9830.0], [48.1, 9842.0], [48.2, 9857.0], [48.3, 9857.0], [48.4, 9871.0], [48.5, 9883.0], [48.6, 9902.0], [48.7, 9908.0], [48.8, 9932.0], [48.9, 9939.0], [49.0, 9944.0], [49.1, 9973.0], [49.2, 9982.0], [49.3, 9989.0], [49.4, 9990.0], [49.5, 9995.0], [49.6, 10004.0], [49.7, 10013.0], [49.8, 10021.0], [49.9, 10041.0], [50.0, 10045.0], [50.1, 10054.0], [50.2, 10066.0], [50.3, 10069.0], [50.4, 10089.0], [50.5, 10092.0], [50.6, 10106.0], [50.7, 10135.0], [50.8, 10144.0], [50.9, 10153.0], [51.0, 10171.0], [51.1, 10178.0], [51.2, 10180.0], [51.3, 10210.0], [51.4, 10214.0], [51.5, 10235.0], [51.6, 10240.0], [51.7, 10247.0], [51.8, 10250.0], [51.9, 10257.0], [52.0, 10268.0], [52.1, 10304.0], [52.2, 10369.0], [52.3, 10370.0], [52.4, 10403.0], [52.5, 10411.0], [52.6, 10416.0], [52.7, 10420.0], [52.8, 10438.0], [52.9, 10443.0], [53.0, 10450.0], [53.1, 10455.0], [53.2, 10484.0], [53.3, 10490.0], [53.4, 10509.0], [53.5, 10516.0], [53.6, 10520.0], [53.7, 10527.0], [53.8, 10528.0], [53.9, 10542.0], [54.0, 10549.0], [54.1, 10550.0], [54.2, 10565.0], [54.3, 10581.0], [54.4, 10585.0], [54.5, 10611.0], [54.6, 10620.0], [54.7, 10620.0], [54.8, 10622.0], [54.9, 10626.0], [55.0, 10629.0], [55.1, 10632.0], [55.2, 10634.0], [55.3, 10647.0], [55.4, 10653.0], [55.5, 10655.0], [55.6, 10660.0], [55.7, 10669.0], [55.8, 10681.0], [55.9, 10683.0], [56.0, 10683.0], [56.1, 10686.0], [56.2, 10693.0], [56.3, 10704.0], [56.4, 10704.0], [56.5, 10719.0], [56.6, 10721.0], [56.7, 10730.0], [56.8, 10738.0], [56.9, 10738.0], [57.0, 10739.0], [57.1, 10747.0], [57.2, 10756.0], [57.3, 10767.0], [57.4, 10769.0], [57.5, 10776.0], [57.6, 10777.0], [57.7, 10795.0], [57.8, 10795.0], [57.9, 10799.0], [58.0, 10800.0], [58.1, 10824.0], [58.2, 10824.0], [58.3, 10831.0], [58.4, 10832.0], [58.5, 10842.0], [58.6, 10849.0], [58.7, 10854.0], [58.8, 10862.0], [58.9, 10864.0], [59.0, 10869.0], [59.1, 10874.0], [59.2, 10894.0], [59.3, 10895.0], [59.4, 10901.0], [59.5, 10903.0], [59.6, 10904.0], [59.7, 10917.0], [59.8, 10925.0], [59.9, 10931.0], [60.0, 10951.0], [60.1, 10956.0], [60.2, 10967.0], [60.3, 10969.0], [60.4, 10973.0], [60.5, 10974.0], [60.6, 10977.0], [60.7, 10992.0], [60.8, 10994.0], [60.9, 11017.0], [61.0, 11040.0], [61.1, 11044.0], [61.2, 11054.0], [61.3, 11059.0], [61.4, 11059.0], [61.5, 11060.0], [61.6, 11064.0], [61.7, 11068.0], [61.8, 11087.0], [61.9, 11092.0], [62.0, 11097.0], [62.1, 11102.0], [62.2, 11117.0], [62.3, 11121.0], [62.4, 11125.0], [62.5, 11130.0], [62.6, 11145.0], [62.7, 11163.0], [62.8, 11166.0], [62.9, 11168.0], [63.0, 11189.0], [63.1, 11195.0], [63.2, 11229.0], [63.3, 11241.0], [63.4, 11260.0], [63.5, 11262.0], [63.6, 11265.0], [63.7, 11272.0], [63.8, 11287.0], [63.9, 11289.0], [64.0, 11302.0], [64.1, 11304.0], [64.2, 11311.0], [64.3, 11323.0], [64.4, 11325.0], [64.5, 11336.0], [64.6, 11344.0], [64.7, 11350.0], [64.8, 11356.0], [64.9, 11387.0], [65.0, 11394.0], [65.1, 11402.0], [65.2, 11426.0], [65.3, 11428.0], [65.4, 11437.0], [65.5, 11453.0], [65.6, 11460.0], [65.7, 11477.0], [65.8, 11482.0], [65.9, 11489.0], [66.0, 11493.0], [66.1, 11498.0], [66.2, 11512.0], [66.3, 11544.0], [66.4, 11547.0], [66.5, 11550.0], [66.6, 11563.0], [66.7, 11611.0], [66.8, 11615.0], [66.9, 11625.0], [67.0, 11627.0], [67.1, 11628.0], [67.2, 11651.0], [67.3, 11674.0], [67.4, 11722.0], [67.5, 11731.0], [67.6, 11766.0], [67.7, 11782.0], [67.8, 11798.0], [67.9, 11805.0], [68.0, 11807.0], [68.1, 11814.0], [68.2, 11828.0], [68.3, 11846.0], [68.4, 11854.0], [68.5, 11868.0], [68.6, 11871.0], [68.7, 11890.0], [68.8, 11908.0], [68.9, 11917.0], [69.0, 11929.0], [69.1, 11940.0], [69.2, 11961.0], [69.3, 11963.0], [69.4, 11988.0], [69.5, 12015.0], [69.6, 12022.0], [69.7, 12029.0], [69.8, 12086.0], [69.9, 12092.0], [70.0, 12100.0], [70.1, 12101.0], [70.2, 12109.0], [70.3, 12109.0], [70.4, 12131.0], [70.5, 12132.0], [70.6, 12132.0], [70.7, 12161.0], [70.8, 12175.0], [70.9, 12178.0], [71.0, 12207.0], [71.1, 12209.0], [71.2, 12215.0], [71.3, 12225.0], [71.4, 12226.0], [71.5, 12255.0], [71.6, 12262.0], [71.7, 12265.0], [71.8, 12267.0], [71.9, 12287.0], [72.0, 12298.0], [72.1, 12298.0], [72.2, 12301.0], [72.3, 12316.0], [72.4, 12326.0], [72.5, 12327.0], [72.6, 12342.0], [72.7, 12375.0], [72.8, 12398.0], [72.9, 12399.0], [73.0, 12405.0], [73.1, 12414.0], [73.2, 12415.0], [73.3, 12417.0], [73.4, 12421.0], [73.5, 12425.0], [73.6, 12436.0], [73.7, 12452.0], [73.8, 12453.0], [73.9, 12456.0], [74.0, 12457.0], [74.1, 12465.0], [74.2, 12470.0], [74.3, 12488.0], [74.4, 12498.0], [74.5, 12499.0], [74.6, 12508.0], [74.7, 12546.0], [74.8, 12546.0], [74.9, 12554.0], [75.0, 12578.0], [75.1, 12596.0], [75.2, 12633.0], [75.3, 12633.0], [75.4, 12637.0], [75.5, 12656.0], [75.6, 12665.0], [75.7, 12672.0], [75.8, 12714.0], [75.9, 12727.0], [76.0, 12728.0], [76.1, 12741.0], [76.2, 12746.0], [76.3, 12750.0], [76.4, 12751.0], [76.5, 12753.0], [76.6, 12760.0], [76.7, 12770.0], [76.8, 12772.0], [76.9, 12772.0], [77.0, 12781.0], [77.1, 12782.0], [77.2, 12787.0], [77.3, 12800.0], [77.4, 12808.0], [77.5, 12820.0], [77.6, 12849.0], [77.7, 12850.0], [77.8, 12858.0], [77.9, 12881.0], [78.0, 12887.0], [78.1, 12889.0], [78.2, 12902.0], [78.3, 12926.0], [78.4, 12926.0], [78.5, 12927.0], [78.6, 12928.0], [78.7, 12933.0], [78.8, 12936.0], [78.9, 12936.0], [79.0, 12948.0], [79.1, 12954.0], [79.2, 12954.0], [79.3, 12955.0], [79.4, 13004.0], [79.5, 13023.0], [79.6, 13024.0], [79.7, 13025.0], [79.8, 13030.0], [79.9, 13031.0], [80.0, 13037.0], [80.1, 13041.0], [80.2, 13045.0], [80.3, 13060.0], [80.4, 13063.0], [80.5, 13065.0], [80.6, 13081.0], [80.7, 13085.0], [80.8, 13097.0], [80.9, 13098.0], [81.0, 13103.0], [81.1, 13116.0], [81.2, 13118.0], [81.3, 13120.0], [81.4, 13125.0], [81.5, 13125.0], [81.6, 13126.0], [81.7, 13132.0], [81.8, 13135.0], [81.9, 13140.0], [82.0, 13146.0], [82.1, 13158.0], [82.2, 13161.0], [82.3, 13181.0], [82.4, 13183.0], [82.5, 13187.0], [82.6, 13201.0], [82.7, 13204.0], [82.8, 13214.0], [82.9, 13217.0], [83.0, 13228.0], [83.1, 13253.0], [83.2, 13260.0], [83.3, 13261.0], [83.4, 13286.0], [83.5, 13314.0], [83.6, 13324.0], [83.7, 13332.0], [83.8, 13339.0], [83.9, 13356.0], [84.0, 13358.0], [84.1, 13371.0], [84.2, 13382.0], [84.3, 13409.0], [84.4, 13421.0], [84.5, 13437.0], [84.6, 13449.0], [84.7, 13449.0], [84.8, 13454.0], [84.9, 13461.0], [85.0, 13471.0], [85.1, 13472.0], [85.2, 13476.0], [85.3, 13486.0], [85.4, 13502.0], [85.5, 13517.0], [85.6, 13538.0], [85.7, 13539.0], [85.8, 13556.0], [85.9, 13570.0], [86.0, 13570.0], [86.1, 13571.0], [86.2, 13632.0], [86.3, 13650.0], [86.4, 13730.0], [86.5, 13734.0], [86.6, 13737.0], [86.7, 13750.0], [86.8, 13752.0], [86.9, 13769.0], [87.0, 13770.0], [87.1, 13785.0], [87.2, 13788.0], [87.3, 13806.0], [87.4, 13807.0], [87.5, 13811.0], [87.6, 13818.0], [87.7, 13823.0], [87.8, 13823.0], [87.9, 13852.0], [88.0, 13884.0], [88.1, 13936.0], [88.2, 13967.0], [88.3, 13978.0], [88.4, 13983.0], [88.5, 13986.0], [88.6, 13994.0], [88.7, 14002.0], [88.8, 14038.0], [88.9, 14049.0], [89.0, 14063.0], [89.1, 14071.0], [89.2, 14141.0], [89.3, 14141.0], [89.4, 14183.0], [89.5, 14183.0], [89.6, 14236.0], [89.7, 14244.0], [89.8, 14269.0], [89.9, 14276.0], [90.0, 14292.0], [90.1, 14353.0], [90.2, 14360.0], [90.3, 14366.0], [90.4, 14372.0], [90.5, 14374.0], [90.6, 14397.0], [90.7, 14399.0], [90.8, 14417.0], [90.9, 14452.0], [91.0, 14460.0], [91.1, 14471.0], [91.2, 14480.0], [91.3, 14480.0], [91.4, 14496.0], [91.5, 14497.0], [91.6, 14518.0], [91.7, 14526.0], [91.8, 14534.0], [91.9, 14538.0], [92.0, 14567.0], [92.1, 14584.0], [92.2, 14607.0], [92.3, 14617.0], [92.4, 14627.0], [92.5, 14645.0], [92.6, 14676.0], [92.7, 14684.0], [92.8, 14696.0], [92.9, 14763.0], [93.0, 14785.0], [93.1, 14799.0], [93.2, 14841.0], [93.3, 14844.0], [93.4, 14875.0], [93.5, 14917.0], [93.6, 14917.0], [93.7, 14920.0], [93.8, 14951.0], [93.9, 14955.0], [94.0, 14988.0], [94.1, 14993.0], [94.2, 15028.0], [94.3, 15054.0], [94.4, 15058.0], [94.5, 15081.0], [94.6, 15107.0], [94.7, 15120.0], [94.8, 15177.0], [94.9, 15179.0], [95.0, 15227.0], [95.1, 15250.0], [95.2, 15253.0], [95.3, 15255.0], [95.4, 15263.0], [95.5, 15264.0], [95.6, 15278.0], [95.7, 15280.0], [95.8, 15284.0], [95.9, 15286.0], [96.0, 15323.0], [96.1, 15559.0], [96.2, 15576.0], [96.3, 15597.0], [96.4, 15603.0], [96.5, 15605.0], [96.6, 15615.0], [96.7, 15665.0], [96.8, 15677.0], [96.9, 15681.0], [97.0, 15710.0], [97.1, 15712.0], [97.2, 15727.0], [97.3, 15750.0], [97.4, 15812.0], [97.5, 15866.0], [97.6, 15871.0], [97.7, 15919.0], [97.8, 15927.0], [97.9, 15950.0], [98.0, 15990.0], [98.1, 16027.0], [98.2, 16051.0], [98.3, 16114.0], [98.4, 16135.0], [98.5, 16160.0], [98.6, 16168.0], [98.7, 16177.0], [98.8, 16201.0], [98.9, 16237.0], [99.0, 16367.0], [99.1, 16367.0], [99.2, 16369.0], [99.3, 16470.0], [99.4, 16643.0], [99.5, 16741.0], [99.6, 16749.0], [99.7, 16829.0], [99.8, 16853.0], [99.9, 17209.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 1639.0], [0.1, 1750.0], [0.2, 1756.0], [0.3, 1756.0], [0.4, 1853.0], [0.5, 1887.0], [0.6, 1922.0], [0.7, 1925.0], [0.8, 1930.0], [0.9, 1932.0], [1.0, 1933.0], [1.1, 1961.0], [1.2, 1965.0], [1.3, 2021.0], [1.4, 2021.0], [1.5, 2148.0], [1.6, 2155.0], [1.7, 2172.0], [1.8, 2174.0], [1.9, 2196.0], [2.0, 2198.0], [2.1, 2229.0], [2.2, 2249.0], [2.3, 2263.0], [2.4, 2264.0], [2.5, 2281.0], [2.6, 2285.0], [2.7, 2297.0], [2.8, 2300.0], [2.9, 2301.0], [3.0, 2326.0], [3.1, 2353.0], [3.2, 2399.0], [3.3, 2404.0], [3.4, 2420.0], [3.5, 2421.0], [3.6, 2422.0], [3.7, 2505.0], [3.8, 2579.0], [3.9, 2597.0], [4.0, 2656.0], [4.1, 2665.0], [4.2, 2699.0], [4.3, 2702.0], [4.4, 2781.0], [4.5, 2849.0], [4.6, 2872.0], [4.7, 2886.0], [4.8, 2937.0], [4.9, 2943.0], [5.0, 2959.0], [5.1, 3074.0], [5.2, 3085.0], [5.3, 3105.0], [5.4, 3128.0], [5.5, 3153.0], [5.6, 3207.0], [5.7, 3208.0], [5.8, 3264.0], [5.9, 3292.0], [6.0, 3295.0], [6.1, 3309.0], [6.2, 3355.0], [6.3, 3360.0], [6.4, 3385.0], [6.5, 3462.0], [6.6, 3487.0], [6.7, 3543.0], [6.8, 3547.0], [6.9, 3568.0], [7.0, 3579.0], [7.1, 3584.0], [7.2, 3599.0], [7.3, 3602.0], [7.4, 3646.0], [7.5, 3741.0], [7.6, 3855.0], [7.7, 3858.0], [7.8, 3863.0], [7.9, 3904.0], [8.0, 3932.0], [8.1, 3958.0], [8.2, 4008.0], [8.3, 4019.0], [8.4, 4023.0], [8.5, 4046.0], [8.6, 4076.0], [8.7, 4114.0], [8.8, 4235.0], [8.9, 4237.0], [9.0, 4285.0], [9.1, 4290.0], [9.2, 4297.0], [9.3, 4321.0], [9.4, 4367.0], [9.5, 4378.0], [9.6, 4386.0], [9.7, 4411.0], [9.8, 4421.0], [9.9, 4448.0], [10.0, 4454.0], [10.1, 4462.0], [10.2, 4501.0], [10.3, 4542.0], [10.4, 4554.0], [10.5, 4564.0], [10.6, 4566.0], [10.7, 4568.0], [10.8, 4575.0], [10.9, 4580.0], [11.0, 4585.0], [11.1, 4585.0], [11.2, 4607.0], [11.3, 4616.0], [11.4, 4618.0], [11.5, 4631.0], [11.6, 4651.0], [11.7, 4655.0], [11.8, 4656.0], [11.9, 4658.0], [12.0, 4665.0], [12.1, 4667.0], [12.2, 4669.0], [12.3, 4671.0], [12.4, 4676.0], [12.5, 4679.0], [12.6, 4689.0], [12.7, 4692.0], [12.8, 4693.0], [12.9, 4693.0], [13.0, 4694.0], [13.1, 4695.0], [13.2, 4695.0], [13.3, 4696.0], [13.4, 4697.0], [13.5, 4698.0], [13.6, 4717.0], [13.7, 4718.0], [13.8, 4722.0], [13.9, 4737.0], [14.0, 4748.0], [14.1, 4765.0], [14.2, 4834.0], [14.3, 4835.0], [14.4, 4843.0], [14.5, 4850.0], [14.6, 4892.0], [14.7, 4979.0], [14.8, 5095.0], [14.9, 5120.0], [15.0, 5126.0], [15.1, 5175.0], [15.2, 5188.0], [15.3, 5203.0], [15.4, 5233.0], [15.5, 5276.0], [15.6, 5277.0], [15.7, 5312.0], [15.8, 5316.0], [15.9, 5324.0], [16.0, 5324.0], [16.1, 5327.0], [16.2, 5329.0], [16.3, 5331.0], [16.4, 5336.0], [16.5, 5338.0], [16.6, 5339.0], [16.7, 5339.0], [16.8, 5340.0], [16.9, 5340.0], [17.0, 5356.0], [17.1, 5360.0], [17.2, 5361.0], [17.3, 5364.0], [17.4, 5364.0], [17.5, 5365.0], [17.6, 5366.0], [17.7, 5372.0], [17.8, 5375.0], [17.9, 5377.0], [18.0, 5377.0], [18.1, 5379.0], [18.2, 5379.0], [18.3, 5379.0], [18.4, 5387.0], [18.5, 5392.0], [18.6, 5408.0], [18.7, 5408.0], [18.8, 5411.0], [18.9, 5412.0], [19.0, 5455.0], [19.1, 5510.0], [19.2, 5514.0], [19.3, 5538.0], [19.4, 5542.0], [19.5, 5555.0], [19.6, 5558.0], [19.7, 5567.0], [19.8, 5573.0], [19.9, 5582.0], [20.0, 5588.0], [20.1, 5621.0], [20.2, 5629.0], [20.3, 5635.0], [20.4, 5637.0], [20.5, 5638.0], [20.6, 5646.0], [20.7, 5646.0], [20.8, 5657.0], [20.9, 5659.0], [21.0, 5661.0], [21.1, 5662.0], [21.2, 5663.0], [21.3, 5669.0], [21.4, 5676.0], [21.5, 5688.0], [21.6, 5696.0], [21.7, 5698.0], [21.8, 5698.0], [21.9, 5702.0], [22.0, 5780.0], [22.1, 5786.0], [22.2, 5809.0], [22.3, 5813.0], [22.4, 5817.0], [22.5, 5822.0], [22.6, 5839.0], [22.7, 5852.0], [22.8, 5861.0], [22.9, 5931.0], [23.0, 5970.0], [23.1, 6001.0], [23.2, 6044.0], [23.3, 6060.0], [23.4, 6080.0], [23.5, 6116.0], [23.6, 6123.0], [23.7, 6133.0], [23.8, 6141.0], [23.9, 6149.0], [24.0, 6163.0], [24.1, 6183.0], [24.2, 6187.0], [24.3, 6218.0], [24.4, 6239.0], [24.5, 6291.0], [24.6, 6299.0], [24.7, 6324.0], [24.8, 6343.0], [24.9, 6354.0], [25.0, 6367.0], [25.1, 6432.0], [25.2, 6437.0], [25.3, 6488.0], [25.4, 6511.0], [25.5, 6526.0], [25.6, 6540.0], [25.7, 6540.0], [25.8, 6565.0], [25.9, 6607.0], [26.0, 6626.0], [26.1, 6645.0], [26.2, 6663.0], [26.3, 6665.0], [26.4, 6680.0], [26.5, 6721.0], [26.6, 6727.0], [26.7, 6736.0], [26.8, 6752.0], [26.9, 6815.0], [27.0, 6821.0], [27.1, 6822.0], [27.2, 6828.0], [27.3, 6829.0], [27.4, 6864.0], [27.5, 6869.0], [27.6, 6893.0], [27.7, 6902.0], [27.8, 6916.0], [27.9, 6947.0], [28.0, 6984.0], [28.1, 6995.0], [28.2, 7010.0], [28.3, 7024.0], [28.4, 7028.0], [28.5, 7037.0], [28.6, 7061.0], [28.7, 7069.0], [28.8, 7082.0], [28.9, 7124.0], [29.0, 7133.0], [29.1, 7135.0], [29.2, 7138.0], [29.3, 7174.0], [29.4, 7193.0], [29.5, 7202.0], [29.6, 7212.0], [29.7, 7213.0], [29.8, 7213.0], [29.9, 7223.0], [30.0, 7245.0], [30.1, 7288.0], [30.2, 7292.0], [30.3, 7295.0], [30.4, 7306.0], [30.5, 7313.0], [30.6, 7319.0], [30.7, 7328.0], [30.8, 7330.0], [30.9, 7338.0], [31.0, 7356.0], [31.1, 7366.0], [31.2, 7370.0], [31.3, 7371.0], [31.4, 7373.0], [31.5, 7377.0], [31.6, 7380.0], [31.7, 7405.0], [31.8, 7427.0], [31.9, 7449.0], [32.0, 7470.0], [32.1, 7474.0], [32.2, 7497.0], [32.3, 7507.0], [32.4, 7509.0], [32.5, 7523.0], [32.6, 7549.0], [32.7, 7551.0], [32.8, 7562.0], [32.9, 7580.0], [33.0, 7611.0], [33.1, 7634.0], [33.2, 7651.0], [33.3, 7655.0], [33.4, 7665.0], [33.5, 7681.0], [33.6, 7684.0], [33.7, 7713.0], [33.8, 7714.0], [33.9, 7717.0], [34.0, 7723.0], [34.1, 7724.0], [34.2, 7748.0], [34.3, 7754.0], [34.4, 7760.0], [34.5, 7796.0], [34.6, 7800.0], [34.7, 7808.0], [34.8, 7809.0], [34.9, 7830.0], [35.0, 7841.0], [35.1, 7855.0], [35.2, 7930.0], [35.3, 7931.0], [35.4, 7971.0], [35.5, 7986.0], [35.6, 8003.0], [35.7, 8014.0], [35.8, 8042.0], [35.9, 8043.0], [36.0, 8044.0], [36.1, 8103.0], [36.2, 8129.0], [36.3, 8180.0], [36.4, 8195.0], [36.5, 8202.0], [36.6, 8209.0], [36.7, 8232.0], [36.8, 8292.0], [36.9, 8294.0], [37.0, 8321.0], [37.1, 8399.0], [37.2, 8418.0], [37.3, 8421.0], [37.4, 8428.0], [37.5, 8442.0], [37.6, 8445.0], [37.7, 8478.0], [37.8, 8523.0], [37.9, 8557.0], [38.0, 8583.0], [38.1, 8611.0], [38.2, 8646.0], [38.3, 8648.0], [38.4, 8661.0], [38.5, 8688.0], [38.6, 8727.0], [38.7, 8773.0], [38.8, 8779.0], [38.9, 8779.0], [39.0, 8826.0], [39.1, 8829.0], [39.2, 8865.0], [39.3, 8892.0], [39.4, 8901.0], [39.5, 8915.0], [39.6, 8922.0], [39.7, 8950.0], [39.8, 8953.0], [39.9, 8976.0], [40.0, 8976.0], [40.1, 8987.0], [40.2, 8998.0], [40.3, 9005.0], [40.4, 9011.0], [40.5, 9029.0], [40.6, 9036.0], [40.7, 9042.0], [40.8, 9045.0], [40.9, 9071.0], [41.0, 9107.0], [41.1, 9128.0], [41.2, 9132.0], [41.3, 9134.0], [41.4, 9134.0], [41.5, 9161.0], [41.6, 9163.0], [41.7, 9190.0], [41.8, 9200.0], [41.9, 9202.0], [42.0, 9213.0], [42.1, 9227.0], [42.2, 9228.0], [42.3, 9234.0], [42.4, 9246.0], [42.5, 9246.0], [42.6, 9248.0], [42.7, 9251.0], [42.8, 9272.0], [42.9, 9275.0], [43.0, 9293.0], [43.1, 9308.0], [43.2, 9311.0], [43.3, 9311.0], [43.4, 9312.0], [43.5, 9323.0], [43.6, 9333.0], [43.7, 9334.0], [43.8, 9339.0], [43.9, 9340.0], [44.0, 9342.0], [44.1, 9349.0], [44.2, 9354.0], [44.3, 9364.0], [44.4, 9376.0], [44.5, 9380.0], [44.6, 9380.0], [44.7, 9386.0], [44.8, 9392.0], [44.9, 9408.0], [45.0, 9427.0], [45.1, 9428.0], [45.2, 9434.0], [45.3, 9437.0], [45.4, 9447.0], [45.5, 9454.0], [45.6, 9476.0], [45.7, 9491.0], [45.8, 9493.0], [45.9, 9495.0], [46.0, 9531.0], [46.1, 9538.0], [46.2, 9541.0], [46.3, 9544.0], [46.4, 9566.0], [46.5, 9573.0], [46.6, 9599.0], [46.7, 9602.0], [46.8, 9608.0], [46.9, 9632.0], [47.0, 9647.0], [47.1, 9647.0], [47.2, 9653.0], [47.3, 9653.0], [47.4, 9657.0], [47.5, 9657.0], [47.6, 9658.0], [47.7, 9666.0], [47.8, 9677.0], [47.9, 9681.0], [48.0, 9702.0], [48.1, 9718.0], [48.2, 9725.0], [48.3, 9740.0], [48.4, 9766.0], [48.5, 9801.0], [48.6, 9822.0], [48.7, 9828.0], [48.8, 9831.0], [48.9, 9833.0], [49.0, 9849.0], [49.1, 9884.0], [49.2, 9899.0], [49.3, 9904.0], [49.4, 9916.0], [49.5, 9917.0], [49.6, 9919.0], [49.7, 9919.0], [49.8, 9930.0], [49.9, 9947.0], [50.0, 9950.0], [50.1, 9967.0], [50.2, 9967.0], [50.3, 9969.0], [50.4, 9977.0], [50.5, 9985.0], [50.6, 10014.0], [50.7, 10019.0], [50.8, 10029.0], [50.9, 10032.0], [51.0, 10036.0], [51.1, 10043.0], [51.2, 10064.0], [51.3, 10094.0], [51.4, 10106.0], [51.5, 10119.0], [51.6, 10141.0], [51.7, 10143.0], [51.8, 10171.0], [51.9, 10184.0], [52.0, 10189.0], [52.1, 10190.0], [52.2, 10211.0], [52.3, 10226.0], [52.4, 10236.0], [52.5, 10237.0], [52.6, 10290.0], [52.7, 10295.0], [52.8, 10299.0], [52.9, 10301.0], [53.0, 10307.0], [53.1, 10307.0], [53.2, 10313.0], [53.3, 10329.0], [53.4, 10352.0], [53.5, 10365.0], [53.6, 10365.0], [53.7, 10367.0], [53.8, 10371.0], [53.9, 10384.0], [54.0, 10391.0], [54.1, 10430.0], [54.2, 10430.0], [54.3, 10442.0], [54.4, 10442.0], [54.5, 10445.0], [54.6, 10446.0], [54.7, 10452.0], [54.8, 10458.0], [54.9, 10465.0], [55.0, 10466.0], [55.1, 10469.0], [55.2, 10495.0], [55.3, 10498.0], [55.4, 10512.0], [55.5, 10527.0], [55.6, 10532.0], [55.7, 10540.0], [55.8, 10540.0], [55.9, 10554.0], [56.0, 10555.0], [56.1, 10555.0], [56.2, 10560.0], [56.3, 10564.0], [56.4, 10565.0], [56.5, 10568.0], [56.6, 10588.0], [56.7, 10601.0], [56.8, 10602.0], [56.9, 10606.0], [57.0, 10615.0], [57.1, 10616.0], [57.2, 10621.0], [57.3, 10624.0], [57.4, 10624.0], [57.5, 10653.0], [57.6, 10662.0], [57.7, 10670.0], [57.8, 10674.0], [57.9, 10676.0], [58.0, 10682.0], [58.1, 10683.0], [58.2, 10711.0], [58.3, 10715.0], [58.4, 10719.0], [58.5, 10723.0], [58.6, 10737.0], [58.7, 10737.0], [58.8, 10739.0], [58.9, 10746.0], [59.0, 10752.0], [59.1, 10754.0], [59.2, 10764.0], [59.3, 10766.0], [59.4, 10798.0], [59.5, 10800.0], [59.6, 10818.0], [59.7, 10831.0], [59.8, 10833.0], [59.9, 10842.0], [60.0, 10857.0], [60.1, 10859.0], [60.2, 10896.0], [60.3, 10899.0], [60.4, 10902.0], [60.5, 10906.0], [60.6, 10910.0], [60.7, 10910.0], [60.8, 10912.0], [60.9, 10914.0], [61.0, 10919.0], [61.1, 10923.0], [61.2, 10954.0], [61.3, 10959.0], [61.4, 10991.0], [61.5, 10995.0], [61.6, 10996.0], [61.7, 11002.0], [61.8, 11005.0], [61.9, 11005.0], [62.0, 11011.0], [62.1, 11015.0], [62.2, 11017.0], [62.3, 11031.0], [62.4, 11033.0], [62.5, 11041.0], [62.6, 11048.0], [62.7, 11055.0], [62.8, 11069.0], [62.9, 11071.0], [63.0, 11094.0], [63.1, 11095.0], [63.2, 11122.0], [63.3, 11122.0], [63.4, 11123.0], [63.5, 11161.0], [63.6, 11164.0], [63.7, 11173.0], [63.8, 11192.0], [63.9, 11193.0], [64.0, 11194.0], [64.1, 11198.0], [64.2, 11220.0], [64.3, 11224.0], [64.4, 11228.0], [64.5, 11239.0], [64.6, 11241.0], [64.7, 11242.0], [64.8, 11256.0], [64.9, 11274.0], [65.0, 11285.0], [65.1, 11287.0], [65.2, 11291.0], [65.3, 11300.0], [65.4, 11321.0], [65.5, 11329.0], [65.6, 11335.0], [65.7, 11353.0], [65.8, 11370.0], [65.9, 11378.0], [66.0, 11384.0], [66.1, 11388.0], [66.2, 11390.0], [66.3, 11413.0], [66.4, 11419.0], [66.5, 11423.0], [66.6, 11430.0], [66.7, 11446.0], [66.8, 11472.0], [66.9, 11474.0], [67.0, 11488.0], [67.1, 11538.0], [67.2, 11544.0], [67.3, 11564.0], [67.4, 11570.0], [67.5, 11586.0], [67.6, 11595.0], [67.7, 11606.0], [67.8, 11614.0], [67.9, 11663.0], [68.0, 11673.0], [68.1, 11674.0], [68.2, 11701.0], [68.3, 11708.0], [68.4, 11711.0], [68.5, 11731.0], [68.6, 11753.0], [68.7, 11760.0], [68.8, 11776.0], [68.9, 11796.0], [69.0, 11858.0], [69.1, 11858.0], [69.2, 11872.0], [69.3, 11873.0], [69.4, 11893.0], [69.5, 11895.0], [69.6, 11911.0], [69.7, 11926.0], [69.8, 11932.0], [69.9, 11938.0], [70.0, 11940.0], [70.1, 11954.0], [70.2, 11993.0], [70.3, 12010.0], [70.4, 12011.0], [70.5, 12022.0], [70.6, 12033.0], [70.7, 12033.0], [70.8, 12034.0], [70.9, 12048.0], [71.0, 12083.0], [71.1, 12114.0], [71.2, 12114.0], [71.3, 12133.0], [71.4, 12142.0], [71.5, 12147.0], [71.6, 12150.0], [71.7, 12165.0], [71.8, 12166.0], [71.9, 12170.0], [72.0, 12187.0], [72.1, 12200.0], [72.2, 12226.0], [72.3, 12227.0], [72.4, 12228.0], [72.5, 12236.0], [72.6, 12254.0], [72.7, 12257.0], [72.8, 12264.0], [72.9, 12268.0], [73.0, 12317.0], [73.1, 12319.0], [73.2, 12333.0], [73.3, 12336.0], [73.4, 12340.0], [73.5, 12346.0], [73.6, 12354.0], [73.7, 12359.0], [73.8, 12360.0], [73.9, 12370.0], [74.0, 12381.0], [74.1, 12383.0], [74.2, 12387.0], [74.3, 12395.0], [74.4, 12395.0], [74.5, 12425.0], [74.6, 12433.0], [74.7, 12446.0], [74.8, 12451.0], [74.9, 12477.0], [75.0, 12496.0], [75.1, 12502.0], [75.2, 12528.0], [75.3, 12531.0], [75.4, 12570.0], [75.5, 12570.0], [75.6, 12570.0], [75.7, 12580.0], [75.8, 12581.0], [75.9, 12589.0], [76.0, 12595.0], [76.1, 12596.0], [76.2, 12607.0], [76.3, 12650.0], [76.4, 12670.0], [76.5, 12681.0], [76.6, 12682.0], [76.7, 12682.0], [76.8, 12687.0], [76.9, 12696.0], [77.0, 12699.0], [77.1, 12704.0], [77.2, 12726.0], [77.3, 12727.0], [77.4, 12729.0], [77.5, 12750.0], [77.6, 12758.0], [77.7, 12772.0], [77.8, 12787.0], [77.9, 12788.0], [78.0, 12799.0], [78.1, 12808.0], [78.2, 12826.0], [78.3, 12829.0], [78.4, 12830.0], [78.5, 12841.0], [78.6, 12854.0], [78.7, 12861.0], [78.8, 12868.0], [78.9, 12869.0], [79.0, 12874.0], [79.1, 12874.0], [79.2, 12877.0], [79.3, 12878.0], [79.4, 12879.0], [79.5, 12886.0], [79.6, 12894.0], [79.7, 12944.0], [79.8, 12952.0], [79.9, 12958.0], [80.0, 12960.0], [80.1, 12962.0], [80.2, 12964.0], [80.3, 12970.0], [80.4, 12970.0], [80.5, 12982.0], [80.6, 12987.0], [80.7, 12988.0], [80.8, 12989.0], [80.9, 12994.0], [81.0, 13004.0], [81.1, 13006.0], [81.2, 13011.0], [81.3, 13014.0], [81.4, 13020.0], [81.5, 13034.0], [81.6, 13035.0], [81.7, 13035.0], [81.8, 13054.0], [81.9, 13054.0], [82.0, 13055.0], [82.1, 13057.0], [82.2, 13066.0], [82.3, 13068.0], [82.4, 13073.0], [82.5, 13074.0], [82.6, 13081.0], [82.7, 13093.0], [82.8, 13111.0], [82.9, 13113.0], [83.0, 13122.0], [83.1, 13133.0], [83.2, 13135.0], [83.3, 13144.0], [83.4, 13147.0], [83.5, 13155.0], [83.6, 13162.0], [83.7, 13184.0], [83.8, 13189.0], [83.9, 13194.0], [84.0, 13234.0], [84.1, 13235.0], [84.2, 13250.0], [84.3, 13258.0], [84.4, 13287.0], [84.5, 13290.0], [84.6, 13293.0], [84.7, 13294.0], [84.8, 13295.0], [84.9, 13313.0], [85.0, 13357.0], [85.1, 13365.0], [85.2, 13369.0], [85.3, 13379.0], [85.4, 13381.0], [85.5, 13404.0], [85.6, 13412.0], [85.7, 13435.0], [85.8, 13450.0], [85.9, 13459.0], [86.0, 13477.0], [86.1, 13477.0], [86.2, 13481.0], [86.3, 13487.0], [86.4, 13497.0], [86.5, 13504.0], [86.6, 13509.0], [86.7, 13562.0], [86.8, 13580.0], [86.9, 13582.0], [87.0, 13588.0], [87.1, 13626.0], [87.2, 13652.0], [87.3, 13653.0], [87.4, 13668.0], [87.5, 13669.0], [87.6, 13678.0], [87.7, 13714.0], [87.8, 13728.0], [87.9, 13747.0], [88.0, 13762.0], [88.1, 13762.0], [88.2, 13800.0], [88.3, 13832.0], [88.4, 13834.0], [88.5, 13861.0], [88.6, 13875.0], [88.7, 13884.0], [88.8, 13905.0], [88.9, 13915.0], [89.0, 13928.0], [89.1, 13943.0], [89.2, 13993.0], [89.3, 13994.0], [89.4, 14034.0], [89.5, 14069.0], [89.6, 14086.0], [89.7, 14098.0], [89.8, 14128.0], [89.9, 14156.0], [90.0, 14163.0], [90.1, 14178.0], [90.2, 14198.0], [90.3, 14210.0], [90.4, 14292.0], [90.5, 14293.0], [90.6, 14302.0], [90.7, 14305.0], [90.8, 14324.0], [90.9, 14342.0], [91.0, 14343.0], [91.1, 14387.0], [91.2, 14402.0], [91.3, 14404.0], [91.4, 14417.0], [91.5, 14425.0], [91.6, 14437.0], [91.7, 14441.0], [91.8, 14465.0], [91.9, 14476.0], [92.0, 14509.0], [92.1, 14527.0], [92.2, 14532.0], [92.3, 14539.0], [92.4, 14555.0], [92.5, 14555.0], [92.6, 14595.0], [92.7, 14610.0], [92.8, 14621.0], [92.9, 14639.0], [93.0, 14690.0], [93.1, 14721.0], [93.2, 14724.0], [93.3, 14741.0], [93.4, 14759.0], [93.5, 14769.0], [93.6, 14773.0], [93.7, 14802.0], [93.8, 14829.0], [93.9, 14851.0], [94.0, 14858.0], [94.1, 14884.0], [94.2, 14893.0], [94.3, 14925.0], [94.4, 14932.0], [94.5, 14965.0], [94.6, 14968.0], [94.7, 15024.0], [94.8, 15048.0], [94.9, 15092.0], [95.0, 15108.0], [95.1, 15132.0], [95.2, 15149.0], [95.3, 15175.0], [95.4, 15176.0], [95.5, 15182.0], [95.6, 15185.0], [95.7, 15202.0], [95.8, 15209.0], [95.9, 15220.0], [96.0, 15225.0], [96.1, 15225.0], [96.2, 15265.0], [96.3, 15331.0], [96.4, 15363.0], [96.5, 15386.0], [96.6, 15471.0], [96.7, 15501.0], [96.8, 15526.0], [96.9, 15546.0], [97.0, 15603.0], [97.1, 15603.0], [97.2, 15605.0], [97.3, 15632.0], [97.4, 15638.0], [97.5, 15666.0], [97.6, 15669.0], [97.7, 15682.0], [97.8, 15731.0], [97.9, 15732.0], [98.0, 15780.0], [98.1, 15792.0], [98.2, 15871.0], [98.3, 15874.0], [98.4, 15884.0], [98.5, 15895.0], [98.6, 15897.0], [98.7, 15940.0], [98.8, 15945.0], [98.9, 15978.0], [99.0, 16071.0], [99.1, 16130.0], [99.2, 16155.0], [99.3, 16165.0], [99.4, 16218.0], [99.5, 16377.0], [99.6, 16396.0], [99.7, 16477.0], [99.8, 16537.0], [99.9, 16582.0]], "isOverall": false, "label": "https://reqres.in/api/users?page=2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 766.0, "series": [{"data": [[0.0, 766.0], [300.0, 66.0], [600.0, 5.0], [700.0, 1.0], [100.0, 93.0], [400.0, 17.0], [200.0, 47.0], [800.0, 2.0], [500.0, 3.0]], "isOverall": false, "label": "https://reqres.in/api/users/2", "isController": false}, {"data": [[1700.0, 1.0], [1800.0, 2.0], [1900.0, 7.0], [2000.0, 4.0], [2300.0, 7.0], [2200.0, 6.0], [2400.0, 7.0], [2500.0, 3.0], [2600.0, 2.0], [2700.0, 4.0], [2800.0, 1.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 6.0], [3200.0, 4.0], [3300.0, 1.0], [3400.0, 3.0], [3500.0, 5.0], [3600.0, 5.0], [3700.0, 3.0], [3800.0, 2.0], [3900.0, 2.0], [4000.0, 3.0], [4300.0, 7.0], [4100.0, 5.0], [4600.0, 12.0], [4500.0, 4.0], [4400.0, 6.0], [4700.0, 24.0], [4800.0, 2.0], [5000.0, 2.0], [4900.0, 4.0], [5100.0, 3.0], [5200.0, 4.0], [5300.0, 14.0], [5400.0, 21.0], [5600.0, 10.0], [5500.0, 3.0], [5700.0, 12.0], [5800.0, 7.0], [6100.0, 7.0], [5900.0, 5.0], [6000.0, 3.0], [6200.0, 7.0], [6300.0, 2.0], [6600.0, 4.0], [6400.0, 6.0], [6500.0, 4.0], [6700.0, 4.0], [6900.0, 6.0], [6800.0, 6.0], [7100.0, 4.0], [7000.0, 6.0], [7400.0, 10.0], [7300.0, 7.0], [7200.0, 11.0], [7600.0, 6.0], [7500.0, 6.0], [7900.0, 6.0], [7800.0, 11.0], [7700.0, 7.0], [8000.0, 6.0], [8100.0, 4.0], [8400.0, 4.0], [8500.0, 3.0], [8300.0, 5.0], [8600.0, 4.0], [8200.0, 6.0], [8700.0, 3.0], [9000.0, 6.0], [9100.0, 6.0], [9200.0, 7.0], [8900.0, 8.0], [8800.0, 4.0], [9400.0, 14.0], [9300.0, 11.0], [9600.0, 13.0], [9700.0, 15.0], [9500.0, 11.0], [10100.0, 7.0], [10200.0, 8.0], [9800.0, 6.0], [9900.0, 10.0], [10000.0, 10.0], [10600.0, 18.0], [10400.0, 10.0], [10700.0, 17.0], [10500.0, 11.0], [10300.0, 3.0], [11100.0, 11.0], [11200.0, 8.0], [11000.0, 12.0], [10900.0, 15.0], [10800.0, 14.0], [11300.0, 11.0], [11600.0, 7.0], [11400.0, 11.0], [11500.0, 5.0], [11700.0, 5.0], [12200.0, 12.0], [12000.0, 5.0], [11900.0, 7.0], [11800.0, 9.0], [12100.0, 10.0], [12300.0, 8.0], [12500.0, 6.0], [12700.0, 16.0], [12400.0, 16.0], [12600.0, 6.0], [13300.0, 8.0], [13200.0, 9.0], [13100.0, 16.0], [13000.0, 16.0], [12800.0, 9.0], [12900.0, 12.0], [13400.0, 11.0], [13700.0, 9.0], [13800.0, 8.0], [13600.0, 2.0], [13500.0, 8.0], [14200.0, 5.0], [14300.0, 7.0], [13900.0, 6.0], [14000.0, 5.0], [14100.0, 4.0], [14800.0, 3.0], [14600.0, 7.0], [14700.0, 3.0], [14400.0, 8.0], [14500.0, 6.0], [14900.0, 7.0], [15100.0, 4.0], [15200.0, 10.0], [15300.0, 1.0], [15000.0, 4.0], [15500.0, 3.0], [15600.0, 6.0], [15700.0, 4.0], [15800.0, 3.0], [15900.0, 4.0], [16000.0, 2.0], [16100.0, 5.0], [16300.0, 3.0], [16200.0, 2.0], [16400.0, 1.0], [16600.0, 1.0], [16700.0, 2.0], [16800.0, 2.0], [17200.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1600.0, 1.0], [1700.0, 2.0], [1800.0, 3.0], [1900.0, 7.0], [2000.0, 1.0], [2100.0, 6.0], [2300.0, 5.0], [2200.0, 7.0], [2400.0, 4.0], [2500.0, 3.0], [2600.0, 3.0], [2800.0, 3.0], [2700.0, 3.0], [2900.0, 3.0], [3000.0, 2.0], [3100.0, 3.0], [3200.0, 5.0], [3300.0, 4.0], [3400.0, 2.0], [3500.0, 6.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 3.0], [3900.0, 3.0], [4000.0, 5.0], [4300.0, 4.0], [4200.0, 5.0], [4100.0, 1.0], [4600.0, 24.0], [4500.0, 10.0], [4400.0, 5.0], [4700.0, 6.0], [4800.0, 5.0], [4900.0, 1.0], [5100.0, 4.0], [5000.0, 1.0], [5200.0, 4.0], [5300.0, 29.0], [5400.0, 5.0], [5600.0, 17.0], [5500.0, 10.0], [5700.0, 3.0], [5800.0, 7.0], [6100.0, 8.0], [6000.0, 4.0], [5900.0, 2.0], [6200.0, 4.0], [6300.0, 4.0], [6400.0, 3.0], [6500.0, 5.0], [6600.0, 6.0], [6800.0, 8.0], [6900.0, 5.0], [6700.0, 4.0], [7000.0, 7.0], [7100.0, 6.0], [7400.0, 6.0], [7300.0, 13.0], [7200.0, 9.0], [7600.0, 7.0], [7500.0, 7.0], [7700.0, 9.0], [7900.0, 4.0], [7800.0, 6.0], [8100.0, 4.0], [8000.0, 5.0], [8600.0, 5.0], [8400.0, 6.0], [8300.0, 2.0], [8200.0, 5.0], [8500.0, 3.0], [8700.0, 4.0], [9200.0, 13.0], [8900.0, 9.0], [8800.0, 4.0], [9000.0, 7.0], [9100.0, 8.0], [9400.0, 11.0], [9700.0, 5.0], [9500.0, 7.0], [9300.0, 18.0], [9600.0, 13.0], [10000.0, 8.0], [9800.0, 8.0], [10100.0, 8.0], [9900.0, 13.0], [10200.0, 7.0], [10700.0, 13.0], [10300.0, 12.0], [10500.0, 13.0], [10600.0, 15.0], [10400.0, 13.0], [11000.0, 15.0], [11200.0, 11.0], [11100.0, 10.0], [10900.0, 13.0], [10800.0, 9.0], [11500.0, 6.0], [11300.0, 10.0], [11400.0, 8.0], [11700.0, 8.0], [11600.0, 5.0], [11800.0, 6.0], [12200.0, 9.0], [11900.0, 7.0], [12100.0, 10.0], [12000.0, 8.0], [12400.0, 6.0], [12600.0, 9.0], [12700.0, 10.0], [12500.0, 12.0], [12300.0, 15.0], [12900.0, 13.0], [13200.0, 9.0], [13100.0, 12.0], [12800.0, 16.0], [13000.0, 18.0], [13300.0, 6.0], [13400.0, 10.0], [13700.0, 5.0], [13800.0, 6.0], [13500.0, 6.0], [13600.0, 6.0], [14100.0, 5.0], [14300.0, 6.0], [14200.0, 3.0], [13900.0, 6.0], [14000.0, 4.0], [14800.0, 6.0], [14600.0, 4.0], [14700.0, 6.0], [14500.0, 7.0], [14400.0, 8.0], [15100.0, 7.0], [15200.0, 6.0], [14900.0, 4.0], [15300.0, 3.0], [15000.0, 3.0], [15400.0, 1.0], [15500.0, 3.0], [15600.0, 8.0], [15700.0, 4.0], [15800.0, 5.0], [15900.0, 3.0], [16000.0, 1.0], [16100.0, 3.0], [16300.0, 2.0], [16200.0, 1.0], [16500.0, 2.0], [16400.0, 1.0]], "isOverall": false, "label": "https://reqres.in/api/users?page=2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 17200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 11.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 989.0, "series": [{"data": [[0.0, 989.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 11.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 971.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 29.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 652.4529999999985, "minX": 1.69272768E12, "maxY": 652.4529999999985, "series": [{"data": [[1.69272768E12, 652.4529999999985]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69272768E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.0, "maxY": 17209.0, "series": [{"data": [[2.0, 432.0], [3.0, 672.0], [4.0, 525.0], [5.0, 321.0], [7.0, 313.0], [9.0, 331.0], [10.0, 331.0], [11.0, 317.0], [13.0, 210.0], [15.0, 401.0], [19.0, 206.5], [27.0, 325.0], [32.0, 76.0], [35.0, 81.0], [34.0, 78.0], [37.0, 611.0], [36.0, 431.57142857142856], [39.0, 200.5], [38.0, 444.0], [41.0, 195.33333333333334], [43.0, 192.33333333333334], [45.0, 186.0], [44.0, 195.0], [47.0, 196.0], [49.0, 196.0], [51.0, 191.0], [52.0, 183.0], [55.0, 197.0], [54.0, 199.5], [57.0, 202.33333333333334], [61.0, 200.0], [60.0, 266.6666666666667], [63.0, 200.0], [67.0, 206.0], [66.0, 212.0], [64.0, 209.0], [70.0, 207.33333333333334], [68.0, 208.5], [75.0, 197.0], [74.0, 200.0], [73.0, 202.0], [72.0, 204.66666666666666], [78.0, 193.0], [76.0, 199.0], [82.0, 198.66666666666666], [80.0, 197.0], [87.0, 196.0], [84.0, 199.5], [91.0, 196.0], [89.0, 197.5], [95.0, 195.5], [93.0, 197.33333333333334], [119.0, 160.46666666666667], [116.0, 196.0], [123.0, 144.0], [121.0, 92.0], [120.0, 90.0], [124.0, 94.0], [158.0, 198.0], [155.0, 58.0], [154.0, 58.0], [153.0, 54.0], [152.0, 61.0], [161.0, 62.0], [160.0, 302.5], [180.0, 245.5], [193.0, 83.0], [207.0, 64.0], [205.0, 57.5], [203.0, 61.0], [202.0, 72.0], [201.0, 265.0], [215.0, 61.0], [212.0, 365.0], [210.0, 70.0], [208.0, 68.0], [223.0, 68.5], [222.0, 68.6], [217.0, 59.5], [216.0, 60.0], [218.0, 70.0], [230.0, 63.333333333333336], [227.0, 65.0], [225.0, 66.33333333333333], [238.0, 64.0], [237.0, 63.5], [235.0, 65.0], [234.0, 62.0], [232.0, 63.5], [246.0, 74.0], [244.0, 78.33333333333333], [242.0, 76.66666666666667], [240.0, 76.5], [254.0, 74.0], [250.0, 76.0], [248.0, 72.5], [268.0, 70.0], [270.0, 70.0], [271.0, 68.5], [269.0, 144.0], [267.0, 73.0], [265.0, 71.0], [263.0, 72.0], [258.0, 441.5], [256.0, 74.0], [262.0, 73.0], [261.0, 68.0], [260.0, 67.33333333333333], [287.0, 365.0], [284.0, 69.0], [282.0, 271.5], [280.0, 74.0], [279.0, 67.5], [278.0, 65.5], [276.0, 67.33333333333333], [274.0, 68.0], [272.0, 72.0], [298.0, 77.0], [296.0, 78.0], [295.0, 71.33333333333333], [294.0, 66.0], [293.0, 67.0], [318.0, 65.5], [316.0, 63.5], [314.0, 78.0], [313.0, 76.0], [311.0, 79.0], [333.0, 63.0], [335.0, 67.0], [332.0, 190.0], [331.0, 51.0], [330.0, 53.0], [329.0, 70.0], [326.0, 76.0], [325.0, 73.0], [323.0, 247.0], [322.0, 72.5], [320.0, 67.5], [339.0, 60.0], [350.0, 110.5], [351.0, 77.0], [348.0, 73.0], [346.0, 75.5], [345.0, 82.0], [343.0, 72.0], [340.0, 58.0], [338.0, 60.833333333333336], [337.0, 64.0], [336.0, 240.0], [355.0, 58.5], [367.0, 61.0], [364.0, 56.0], [363.0, 57.0], [362.0, 156.0], [360.0, 160.5], [358.0, 172.0], [357.0, 63.0], [356.0, 59.0], [353.0, 71.0], [352.0, 72.0], [383.0, 57.0], [381.0, 55.0], [379.0, 53.0], [378.0, 61.5], [376.0, 56.5], [375.0, 60.0], [373.0, 64.66666666666667], [372.0, 61.0], [371.0, 71.0], [369.0, 61.5], [392.0, 78.0], [389.0, 54.0], [388.0, 58.0], [387.0, 58.25], [386.0, 160.0], [415.0, 57.0], [413.0, 54.0], [402.0, 68.5], [401.0, 68.0], [400.0, 69.0], [411.0, 315.0], [410.0, 53.0], [409.0, 66.0], [408.0, 66.0], [407.0, 65.0], [405.0, 67.0], [404.0, 69.0], [428.0, 682.5], [430.0, 117.0], [431.0, 739.0], [429.0, 113.0], [426.0, 56.0], [424.0, 133.0], [423.0, 67.0], [417.0, 55.0], [416.0, 56.5], [419.0, 64.0], [418.0, 56.0], [422.0, 71.0], [420.0, 65.0], [446.0, 60.0], [447.0, 68.0], [445.0, 62.0], [444.0, 63.0], [443.0, 62.0], [442.0, 314.0], [441.0, 114.0], [439.0, 163.7], [433.0, 207.5], [437.0, 132.0], [436.0, 133.0], [462.0, 52.0], [463.0, 54.0], [461.0, 52.0], [460.0, 50.0], [459.0, 51.0], [458.0, 70.5], [457.0, 63.0], [456.0, 64.0], [454.0, 62.0], [451.0, 60.0], [450.0, 56.0], [449.0, 57.0], [448.0, 417.0], [453.0, 59.0], [478.0, 58.0], [479.0, 57.0], [477.0, 58.666666666666664], [474.0, 57.0], [473.0, 58.0], [472.0, 57.0], [471.0, 117.0], [468.0, 54.0], [467.0, 59.0], [466.0, 57.0], [465.0, 59.0], [464.0, 57.0], [483.0, 339.5], [495.0, 320.5], [492.0, 60.0], [491.0, 60.5], [490.0, 66.0], [489.0, 68.0], [487.0, 65.0], [485.0, 77.0], [484.0, 71.0], [481.0, 72.0], [480.0, 80.0], [499.0, 58.0], [510.0, 56.0], [511.0, 55.5], [508.0, 54.5], [497.0, 58.0], [496.0, 236.0], [505.0, 53.0], [504.0, 63.0], [503.0, 60.0], [502.0, 55.0], [501.0, 61.0], [500.0, 575.0], [540.0, 52.666666666666664], [543.0, 52.666666666666664], [539.0, 53.0], [536.0, 65.0], [535.0, 63.0], [533.0, 60.333333333333336], [531.0, 61.0], [529.0, 54.0], [525.0, 56.25], [516.0, 57.0], [515.0, 59.0], [514.0, 59.25], [524.0, 57.2], [570.0, 65.0], [564.0, 101.0], [574.0, 65.5], [575.0, 66.0], [562.0, 58.0], [561.0, 59.5], [572.0, 65.0], [569.0, 61.0], [551.0, 60.0], [549.0, 343.0], [548.0, 238.0], [547.0, 339.0], [546.0, 60.0], [545.0, 61.0], [544.0, 61.0], [559.0, 62.0], [557.0, 115.0], [555.0, 64.33333333333333], [553.0, 62.0], [567.0, 279.0], [566.0, 69.0], [565.0, 59.0], [602.0, 66.0], [606.0, 68.0], [607.0, 69.0], [593.0, 68.0], [592.0, 65.5], [595.0, 58.0], [594.0, 338.0], [597.0, 58.0], [596.0, 321.0], [605.0, 69.0], [604.0, 69.0], [603.0, 194.0], [600.0, 67.0], [583.0, 325.0], [582.0, 57.0], [579.0, 66.0], [578.0, 65.0], [577.0, 61.0], [576.0, 59.0], [591.0, 63.0], [590.0, 63.0], [589.0, 327.0], [588.0, 54.0], [587.0, 54.0], [586.0, 56.0], [584.0, 55.0], [599.0, 324.0], [598.0, 58.0], [638.0, 316.0], [639.0, 68.0], [625.0, 319.0], [624.0, 195.0], [637.0, 317.0], [635.0, 62.0], [634.0, 83.0], [633.0, 69.5], [622.0, 68.5], [611.0, 409.0], [610.0, 72.33333333333333], [614.0, 79.5], [612.0, 73.0], [621.0, 84.0], [619.0, 83.0], [618.0, 186.5], [616.0, 198.5], [631.0, 62.0], [630.0, 73.0], [628.0, 324.0], [627.0, 625.0], [668.0, 349.5], [659.0, 68.0], [671.0, 69.5], [656.0, 78.0], [666.0, 209.0], [664.0, 68.0], [655.0, 90.0], [642.0, 342.0], [641.0, 334.0], [644.0, 67.0], [643.0, 68.0], [646.0, 74.0], [645.0, 74.0], [654.0, 77.0], [653.0, 82.0], [652.0, 76.5], [651.0, 82.0], [649.0, 76.0], [648.0, 75.0], [663.0, 66.5], [661.0, 68.0], [660.0, 69.0], [658.0, 61.0], [657.0, 69.0], [701.0, 75.0], [702.0, 167.66666666666669], [700.0, 421.0], [699.0, 65.0], [696.0, 75.5], [679.0, 66.0], [678.0, 66.0], [675.0, 72.5], [674.0, 67.5], [672.0, 69.0], [687.0, 77.0], [686.0, 77.0], [685.0, 76.5], [684.0, 74.5], [682.0, 74.0], [680.0, 69.0], [694.0, 273.3333333333333], [691.0, 316.0], [689.0, 78.0], [688.0, 66.0], [731.0, 351.0], [724.0, 98.0], [735.0, 66.0], [720.0, 90.0], [730.0, 351.0], [729.0, 77.0], [719.0, 89.0], [704.0, 84.0], [707.0, 90.0], [705.0, 269.0], [718.0, 103.0], [717.0, 85.5], [715.0, 91.0], [714.0, 87.5], [712.0, 75.5], [727.0, 91.0], [726.0, 99.0], [725.0, 379.0], [722.0, 97.0], [721.0, 93.0], [762.0, 59.0], [766.0, 72.0], [767.0, 69.0], [753.0, 63.0], [752.0, 63.0], [756.0, 61.0], [755.0, 58.333333333333336], [765.0, 70.0], [764.0, 61.0], [763.0, 61.0], [760.0, 59.0], [743.0, 67.0], [742.0, 202.5], [741.0, 329.0], [740.0, 69.0], [739.0, 69.5], [738.0, 70.0], [737.0, 74.0], [736.0, 73.0], [751.0, 70.0], [750.0, 63.0], [749.0, 60.0], [748.0, 64.0], [747.0, 316.0], [746.0, 68.0], [745.0, 67.0], [744.0, 333.0], [759.0, 56.0], [758.0, 61.5], [794.0, 59.0], [786.0, 59.0], [796.0, 64.0], [798.0, 66.0], [785.0, 58.0], [784.0, 56.0], [795.0, 64.0], [792.0, 55.5], [774.0, 64.0], [773.0, 198.5], [771.0, 81.0], [770.0, 83.5], [768.0, 75.0], [783.0, 53.0], [782.0, 52.0], [781.0, 53.0], [780.0, 53.0], [779.0, 54.5], [778.0, 57.0], [776.0, 67.0], [790.0, 54.5], [788.0, 59.0], [787.0, 61.0], [824.0, 74.0], [828.0, 82.0], [829.0, 70.0], [817.0, 74.0], [816.0, 75.0], [819.0, 83.0], [818.0, 81.0], [827.0, 71.0], [826.0, 72.0], [825.0, 75.0], [815.0, 97.0], [800.0, 75.5], [803.0, 155.0], [802.0, 73.66666666666667], [807.0, 73.0], [804.0, 66.0], [814.0, 78.0], [813.0, 73.0], [812.0, 70.0], [811.0, 80.0], [810.0, 78.0], [809.0, 88.0], [823.0, 75.0], [822.0, 75.0], [821.0, 71.0], [820.0, 79.0], [856.0, 62.0], [862.0, 74.0], [863.0, 60.0], [848.0, 73.0], [851.0, 66.0], [850.0, 78.0], [861.0, 70.0], [860.0, 73.0], [857.0, 58.0], [847.0, 72.0], [832.0, 61.0], [834.0, 72.0], [833.0, 70.0], [839.0, 71.5], [837.0, 65.66666666666667], [846.0, 77.0], [845.0, 76.0], [844.0, 77.0], [843.0, 78.0], [842.0, 80.0], [841.0, 75.0], [840.0, 71.0], [855.0, 69.0], [854.0, 57.0], [853.0, 56.0], [852.0, 67.0], [883.0, 93.0], [893.0, 66.0], [892.0, 82.0], [891.0, 77.0], [889.0, 77.0], [876.0, 92.0], [865.0, 69.5], [868.0, 73.66666666666667], [867.0, 78.0], [871.0, 84.0], [870.0, 74.0], [875.0, 82.0], [874.0, 95.0], [873.0, 90.66666666666667], [887.0, 88.0], [885.0, 90.0], [884.0, 91.0], [882.0, 67.625], [920.0, 68.0], [926.0, 57.5], [927.0, 63.0], [912.0, 59.5], [924.0, 59.0], [923.0, 60.666666666666664], [921.0, 61.0], [911.0, 59.0], [897.0, 64.0], [896.0, 63.0], [899.0, 67.0], [898.0, 68.0], [902.0, 65.5], [900.0, 69.0], [910.0, 81.0], [909.0, 83.0], [908.0, 72.0], [907.0, 76.0], [906.0, 68.0], [905.0, 65.0], [904.0, 66.0], [919.0, 66.0], [917.0, 68.0], [916.0, 68.0], [914.0, 65.33333333333333], [957.0, 61.5], [948.0, 65.0], [959.0, 56.0], [944.0, 70.0], [947.0, 69.5], [945.0, 72.0], [955.0, 62.0], [954.0, 65.0], [952.0, 59.0], [953.0, 134.99999999999997], [935.0, 75.0], [934.0, 66.5], [932.0, 67.0], [931.0, 66.0], [929.0, 70.0], [928.0, 63.0], [943.0, 70.5], [941.0, 82.0], [940.0, 66.0], [939.0, 66.0], [938.0, 61.5], [936.0, 73.0], [951.0, 58.5], [950.0, 71.0], [949.0, 62.0], [984.0, 73.0], [989.0, 340.0], [990.0, 82.0], [976.0, 91.0], [988.0, 343.0], [987.0, 66.0], [985.0, 71.0], [975.0, 95.0], [962.0, 70.0], [961.0, 69.33333333333333], [964.0, 62.0], [963.0, 96.5], [966.0, 86.0], [965.0, 75.0], [974.0, 108.0], [973.0, 105.0], [972.0, 105.0], [971.0, 94.5], [970.0, 90.0], [969.0, 60.0], [968.0, 78.5], [983.0, 333.3333333333333], [981.0, 348.5], [979.0, 190.38461538461542], [977.0, 68.0], [1000.0, 67.33333333333333], [999.0, 101.0], [997.0, 84.0], [996.0, 97.87500000000001], [995.0, 176.33333333333334], [994.0, 55.0], [993.0, 67.0], [992.0, 71.5], [1.0, 313.0]], "isOverall": false, "label": "https://reqres.in/api/users/2", "isController": false}, {"data": [[553.2909999999997, 114.917]], "isOverall": false, "label": "https://reqres.in/api/users/2-Aggregated", "isController": false}, {"data": [[2.0, 10622.0], [3.0, 17209.0], [4.0, 8239.0], [5.0, 14049.0], [7.0, 10704.0], [9.0, 9183.0], [10.0, 14417.0], [11.0, 10849.0], [13.0, 15009.0], [15.0, 11518.5], [19.0, 14384.0], [27.0, 13806.0], [32.0, 6329.5], [35.0, 6688.0], [34.0, 13060.0], [37.0, 16829.0], [36.0, 8972.714285714286], [39.0, 8280.0], [38.0, 4463.0], [41.0, 9648.666666666666], [43.0, 11322.333333333334], [45.0, 6866.0], [44.0, 10647.0], [47.0, 11021.0], [49.0, 9472.5], [51.0, 11488.666666666666], [52.0, 8226.0], [55.0, 10951.0], [54.0, 12991.5], [57.0, 6624.0], [61.0, 9857.0], [60.0, 6946.333333333334], [63.0, 4223.0], [67.0, 9592.0], [66.0, 10767.0], [64.0, 3518.0], [70.0, 10007.0], [68.0, 3566.0], [75.0, 7279.0], [74.0, 3492.0], [73.0, 12316.0], [72.0, 12136.666666666666], [78.0, 8972.0], [76.0, 12727.0], [82.0, 8550.333333333334], [80.0, 12558.5], [87.0, 3581.0], [84.0, 12263.5], [91.0, 9783.0], [89.0, 8953.0], [95.0, 9318.5], [93.0, 9841.333333333334], [119.0, 10760.400000000001], [116.0, 14917.0], [123.0, 10406.5], [121.0, 4389.0], [120.0, 9889.5], [124.0, 9625.0], [158.0, 9604.5], [155.0, 10660.0], [154.0, 11578.0], [153.0, 4730.0], [152.0, 13538.0], [161.0, 14920.0], [160.0, 10762.0], [180.0, 12063.0], [193.0, 10528.0], [207.0, 7402.0], [205.0, 9198.0], [203.0, 12902.0], [202.0, 10178.0], [201.0, 16160.0], [215.0, 1700.0], [212.0, 7835.0], [210.0, 10369.0], [208.0, 9942.5], [223.0, 7657.5], [222.0, 7221.8], [217.0, 9337.0], [216.0, 6105.0], [218.0, 8173.0], [230.0, 10172.333333333334], [227.0, 6114.0], [225.0, 8726.0], [238.0, 10974.0], [237.0, 10286.0], [235.0, 7355.5], [234.0, 12508.0], [232.0, 7771.0], [246.0, 7981.0], [244.0, 10404.0], [242.0, 6747.0], [240.0, 8100.0], [254.0, 7366.0], [250.0, 7007.0], [248.0, 6115.0], [268.0, 1923.0], [270.0, 6733.0], [271.0, 8226.5], [269.0, 6704.0], [267.0, 11426.0], [265.0, 10455.0], [263.0, 12405.0], [258.0, 7747.5], [256.0, 11934.5], [262.0, 11195.0], [261.0, 4435.0], [260.0, 6787.666666666667], [287.0, 16489.0], [284.0, 7050.5], [282.0, 16801.0], [280.0, 7021.0], [279.0, 10880.0], [278.0, 5034.5], [276.0, 8974.333333333334], [274.0, 9739.333333333334], [272.0, 4526.0], [298.0, 9828.666666666666], [296.0, 14617.0], [295.0, 10680.0], [294.0, 6894.0], [293.0, 5598.5], [318.0, 10933.0], [316.0, 7320.0], [314.0, 10739.5], [313.0, 6741.0], [311.0, 10153.5], [333.0, 6226.0], [335.0, 5655.0], [332.0, 16168.0], [331.0, 10416.0], [330.0, 6023.0], [329.0, 10981.0], [326.0, 13759.5], [325.0, 9646.0], [323.0, 16643.0], [322.0, 1996.0], [320.0, 8473.0], [339.0, 13472.0], [350.0, 13826.25], [351.0, 10973.0], [348.0, 8344.0], [346.0, 9489.5], [345.0, 10992.0], [343.0, 13437.0], [340.0, 12596.0], [338.0, 10454.166666666666], [337.0, 5916.0], [336.0, 15603.0], [355.0, 6337.0], [367.0, 4447.0], [364.0, 14497.0], [363.0, 11068.0], [362.0, 12049.0], [360.0, 13208.5], [358.0, 15264.0], [357.0, 10669.0], [356.0, 6496.0], [353.0, 14496.0], [352.0, 11087.0], [383.0, 11627.0], [381.0, 7529.0], [379.0, 7298.0], [378.0, 9308.5], [376.0, 10304.5], [375.0, 8295.5], [373.0, 11301.666666666666], [372.0, 2026.0], [371.0, 8057.0], [369.0, 7239.5], [392.0, 9255.666666666666], [389.0, 14397.0], [388.0, 12554.0], [387.0, 13099.75], [386.0, 13309.5], [415.0, 10641.0], [413.0, 10769.0], [402.0, 4295.0], [401.0, 5703.0], [400.0, 5455.5], [411.0, 16470.0], [410.0, 7266.0], [409.0, 7499.666666666667], [407.0, 8178.333333333333], [408.0, 2488.0], [405.0, 7166.0], [404.0, 6890.0], [428.0, 11319.5], [430.0, 12267.0], [431.0, 15871.0], [429.0, 5811.0], [426.0, 5759.0], [424.0, 7713.0], [423.0, 11287.0], [417.0, 7050.0], [416.0, 9530.0], [419.0, 9540.0], [418.0, 10795.0], [422.0, 10021.0], [420.0, 10653.0], [446.0, 13004.0], [447.0, 7679.0], [445.0, 11550.0], [444.0, 12488.0], [443.0, 12820.0], [442.0, 5990.0], [441.0, 15208.5], [439.0, 11497.3], [433.0, 13105.5], [437.0, 7048.0], [436.0, 8244.0], [462.0, 13041.0], [463.0, 10854.0], [461.0, 10550.0], [460.0, 4635.0], [459.0, 10869.0], [458.0, 9419.5], [457.0, 7419.0], [456.0, 9678.5], [454.0, 5901.0], [451.0, 12889.0], [450.0, 8829.0], [449.0, 10956.0], [448.0, 11323.0], [453.0, 12225.0], [478.0, 13986.0], [479.0, 12633.0], [477.0, 9766.333333333334], [474.0, 4637.0], [473.0, 14567.0], [472.0, 15081.0], [471.0, 11702.666666666666], [468.0, 9365.0], [467.0, 11917.0], [466.0, 12832.5], [465.0, 5839.0], [464.0, 14584.0], [483.0, 13568.5], [495.0, 11230.0], [492.0, 5756.0], [491.0, 7804.0], [490.0, 8988.0], [489.0, 11199.5], [487.0, 12926.0], [485.0, 10632.0], [484.0, 10135.0], [481.0, 5774.0], [480.0, 11272.0], [499.0, 12236.5], [510.0, 5385.0], [511.0, 5414.5], [508.0, 5413.0], [497.0, 12728.0], [496.0, 16102.0], [505.0, 5445.0], [504.0, 12633.0], [503.0, 5434.0], [502.0, 9100.0], [501.0, 5749.0], [500.0, 13730.0], [540.0, 5499.0], [543.0, 5497.333333333333], [539.0, 5380.0], [536.0, 11289.0], [535.0, 8124.0], [533.0, 5705.666666666667], [531.0, 13570.0], [529.0, 5914.5], [525.0, 5410.75], [516.0, 5720.0], [515.0, 9554.0], [514.0, 5449.0], [524.0, 5420.0], [570.0, 5620.0], [564.0, 13930.333333333334], [574.0, 9044.0], [575.0, 14917.0], [562.0, 9271.0], [561.0, 12860.0], [572.0, 5489.5], [569.0, 9133.5], [551.0, 10055.0], [549.0, 9666.0], [548.0, 8034.0], [547.0, 9731.0], [546.0, 9659.0], [545.0, 13823.0], [544.0, 12415.0], [559.0, 5848.0], [557.0, 14878.5], [555.0, 9496.0], [553.0, 9628.0], [567.0, 15665.0], [566.0, 12751.0], [565.0, 10411.0], [602.0, 5269.0], [606.0, 13650.0], [607.0, 14471.0], [593.0, 5301.0], [592.0, 8318.5], [595.0, 11854.0], [594.0, 13332.0], [597.0, 12326.0], [596.0, 10611.0], [605.0, 12456.0], [604.0, 12452.0], [603.0, 12467.0], [600.0, 13502.0], [583.0, 2523.0], [582.0, 12129.0], [579.0, 5604.0], [578.0, 8109.0], [577.0, 14526.0], [576.0, 5626.0], [591.0, 14480.0], [590.0, 9290.0], [589.0, 10634.0], [588.0, 10777.0], [587.0, 7709.0], [586.0, 8925.5], [584.0, 12436.0], [599.0, 9322.0], [598.0, 14534.0], [638.0, 2597.0], [639.0, 12215.0], [625.0, 13769.0], [624.0, 12481.5], [637.0, 8411.5], [635.0, 9402.0], [634.0, 7456.0], [633.0, 7247.0], [622.0, 12318.5], [611.0, 10969.0], [610.0, 10823.666666666666], [614.0, 7542.0], [612.0, 9049.0], [621.0, 13737.0], [619.0, 10549.0], [618.0, 8381.5], [616.0, 9923.0], [631.0, 10904.0], [630.0, 9366.0], [628.0, 14480.0], [627.0, 9786.0], [668.0, 11089.5], [659.0, 13449.0], [671.0, 13214.5], [656.0, 15681.0], [666.0, 12679.0], [664.0, 15750.0], [655.0, 14645.0], [642.0, 8090.0], [641.0, 13286.0], [644.0, 12100.0], [643.0, 13103.0], [646.0, 13752.0], [645.0, 12414.0], [654.0, 5706.0], [653.0, 14374.0], [652.0, 13909.5], [651.0, 13750.0], [649.0, 10874.0], [648.0, 15153.333333333334], [663.0, 12718.5], [661.0, 14993.0], [660.0, 13556.0], [658.0, 2257.0], [657.0, 10560.666666666666], [701.0, 14607.0], [702.0, 10504.0], [700.0, 13983.0], [699.0, 7746.0], [696.0, 12785.5], [679.0, 5772.0], [678.0, 9317.0], [675.0, 2291.0], [674.0, 6168.0], [672.0, 2298.0], [687.0, 13065.0], [686.0, 13132.0], [685.0, 11052.5], [684.0, 11354.0], [682.0, 12163.5], [680.0, 15615.0], [694.0, 13038.666666666666], [691.0, 13409.0], [689.0, 10443.0], [688.0, 13570.0], [731.0, 9483.0], [724.0, 13646.5], [735.0, 2419.0], [720.0, 9767.0], [730.0, 7874.0], [729.0, 6915.5], [719.0, 11563.0], [704.0, 13710.5], [707.0, 10230.0], [705.0, 14510.0], [718.0, 13978.0], [717.0, 10501.0], [715.0, 12029.0], [714.0, 12193.0], [712.0, 7251.833333333334], [727.0, 9857.0], [726.0, 11807.0], [725.0, 10686.0], [722.0, 11336.0], [721.0, 11477.0], [762.0, 10153.0], [766.0, 11166.0], [767.0, 12546.0], [753.0, 9517.0], [752.0, 2360.0], [756.0, 12421.0], [755.0, 8289.333333333334], [765.0, 14063.0], [764.0, 6906.0], [763.0, 6687.0], [760.0, 13063.0], [743.0, 14951.0], [742.0, 8839.5], [741.0, 13476.0], [740.0, 11117.0], [739.0, 13899.0], [738.0, 5196.0], [737.0, 10004.0], [736.0, 9990.0], [751.0, 13449.0], [750.0, 10800.0], [749.0, 9944.0], [748.0, 13098.0], [747.0, 7300.0], [746.0, 12255.0], [745.0, 7241.0], [744.0, 5176.0], [759.0, 2476.0], [758.0, 8487.5], [794.0, 11581.5], [786.0, 13140.0], [796.0, 15284.0], [798.0, 11189.0], [785.0, 15323.0], [784.0, 10730.0], [795.0, 8956.0], [792.0, 15038.5], [774.0, 13421.0], [773.0, 9983.5], [771.0, 13116.0], [770.0, 11698.0], [768.0, 7199.0], [783.0, 11044.0], [782.0, 11054.0], [781.0, 2939.0], [780.0, 12782.0], [779.0, 7599.5], [778.0, 13201.0], [776.0, 8604.0], [790.0, 10276.5], [788.0, 11437.0], [787.0, 15286.0], [824.0, 11805.0], [828.0, 12881.0], [829.0, 8265.0], [817.0, 15250.0], [816.0, 4537.0], [819.0, 9982.0], [818.0, 13214.0], [827.0, 13085.0], [826.0, 4907.0], [825.0, 9509.0], [815.0, 14002.0], [800.0, 10149.5], [803.0, 2879.0], [802.0, 13563.333333333334], [807.0, 4680.0], [804.0, 13120.0], [814.0, 15227.0], [813.0, 15255.0], [812.0, 10507.5], [811.0, 13314.0], [810.0, 13146.0], [809.0, 12504.666666666666], [823.0, 13936.0], [822.0, 4523.0], [821.0, 12858.0], [820.0, 13994.0], [856.0, 2415.0], [862.0, 6947.0], [863.0, 13126.0], [848.0, 9381.0], [851.0, 11121.0], [850.0, 10301.0], [861.0, 7926.5], [860.0, 4795.0], [857.0, 10795.0], [847.0, 13183.0], [832.0, 8125.0], [834.0, 11460.0], [833.0, 7577.0], [839.0, 6170.0], [837.0, 7614.333333333334], [846.0, 9615.0], [845.0, 10045.0], [844.0, 13261.0], [843.0, 10824.0], [842.0, 2406.0], [841.0, 9209.0], [840.0, 15179.0], [855.0, 2468.0], [854.0, 10268.0], [853.0, 4821.0], [852.0, 10253.5], [883.0, 11512.0], [893.0, 6881.0], [892.0, 14292.0], [891.0, 11592.333333333334], [889.0, 4720.5], [876.0, 4329.0], [865.0, 3619.0], [868.0, 4615.666666666667], [867.0, 4368.0], [871.0, 7177.5], [870.0, 8950.0], [875.0, 11940.0], [874.0, 4766.0], [873.0, 9764.666666666666], [887.0, 4745.0], [885.0, 4745.0], [884.0, 4742.0], [882.0, 4751.75], [920.0, 11262.0], [926.0, 9462.5], [927.0, 8484.0], [912.0, 10450.0], [924.0, 12287.0], [923.0, 11228.333333333334], [921.0, 12015.0], [911.0, 13181.0], [897.0, 13024.0], [896.0, 9720.0], [899.0, 4621.0], [898.0, 12498.0], [902.0, 11185.0], [900.0, 4447.0], [910.0, 13339.0], [909.0, 4647.0], [908.0, 6340.5], [907.0, 12578.0], [906.0, 8625.0], [905.0, 4608.0], [904.0, 10549.5], [919.0, 11695.0], [917.0, 6444.5], [916.0, 9410.0], [914.0, 10522.333333333334], [957.0, 9784.5], [948.0, 11229.0], [959.0, 7490.0], [944.0, 9871.0], [947.0, 7290.0], [945.0, 6259.0], [955.0, 10626.0], [954.0, 9723.0], [952.0, 4601.0], [953.0, 7661.000000000001], [935.0, 14696.0], [934.0, 9696.0], [932.0, 14360.0], [931.0, 13001.5], [929.0, 14372.0], [928.0, 11304.0], [943.0, 7170.0], [941.0, 11356.0], [940.0, 7361.0], [939.0, 13260.0], [938.0, 7961.5], [936.0, 14875.0], [951.0, 7792.0], [950.0, 10438.0], [949.0, 2641.0], [984.0, 4689.0], [989.0, 3212.0], [990.0, 7106.0], [976.0, 7653.0], [988.0, 6908.0], [987.0, 10202.5], [985.0, 13785.0], [975.0, 8494.0], [962.0, 3811.0], [961.0, 14175.666666666666], [964.0, 9015.0], [963.0, 10991.5], [966.0, 8275.0], [965.0, 12301.0], [974.0, 9601.0], [973.0, 7471.0], [972.0, 3592.0], [971.0, 3268.5], [970.0, 5278.0], [969.0, 4635.0], [968.0, 5650.5], [983.0, 9437.666666666666], [981.0, 13721.5], [979.0, 7651.846153846154], [977.0, 6359.0], [1000.0, 8637.0], [999.0, 8635.714285714284], [997.0, 9492.0], [996.0, 5925.875], [995.0, 9512.333333333334], [994.0, 2652.0], [993.0, 11260.0], [992.0, 8008.0], [1.0, 10144.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[553.2909999999997, 9586.722999999998]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[37.0, 14769.0], [55.0, 14555.0], [150.0, 13313.0], [238.0, 14858.0], [335.0, 13225.0], [333.0, 13901.5], [351.0, 8167.5], [350.0, 12319.0], [340.0, 12792.75], [366.0, 13808.0], [367.0, 5822.0], [364.0, 13365.0], [360.0, 15934.0], [359.0, 11033.0], [358.0, 12330.333333333334], [357.0, 11753.0], [356.0, 9511.0], [353.0, 5852.0], [378.0, 15160.0], [376.0, 12739.25], [374.0, 10896.0], [373.0, 9666.0], [391.0, 12726.0], [415.0, 14291.0], [413.0, 11570.0], [411.0, 16396.0], [409.0, 15645.0], [428.0, 15092.0], [426.0, 15764.0], [418.0, 12616.0], [417.0, 10527.0], [445.0, 13425.333333333334], [442.0, 5698.0], [441.0, 12083.0], [439.0, 13028.166666666666], [437.0, 16124.0], [436.0, 9476.0], [463.0, 12166.0], [458.0, 12285.666666666666], [456.0, 12758.0], [453.0, 14305.0], [479.0, 8601.5], [478.0, 14866.5], [475.0, 14527.0], [472.0, 15884.0], [471.0, 16002.0], [468.0, 11321.0], [466.0, 10997.0], [492.0, 14509.0], [489.0, 15024.0], [487.0, 9011.0], [484.0, 9849.0], [481.0, 13964.5], [504.0, 12576.0], [502.0, 9822.0], [501.0, 13928.0], [500.0, 9650.5], [543.0, 5702.0], [562.0, 10766.0], [567.0, 5340.0], [566.0, 11680.5], [565.0, 11789.0], [561.0, 9364.0], [551.0, 5637.1875], [548.0, 6124.6], [547.0, 6623.0], [546.0, 11224.0], [559.0, 5356.0], [558.0, 8261.333333333334], [557.0, 5668.5], [556.0, 5390.166666666667], [555.0, 5659.0], [607.0, 9227.0], [605.0, 10906.0], [583.0, 12788.0], [577.0, 11242.0], [598.0, 5538.0], [597.0, 11005.0], [596.0, 12317.0], [593.0, 8558.833333333332], [592.0, 5555.0], [591.0, 12336.0], [589.0, 8979.5], [588.0, 14822.0], [584.0, 9665.333333333334], [614.0, 5371.5], [634.0, 13992.0], [627.0, 15732.0], [626.0, 10512.0], [622.0, 9319.0], [621.0, 15780.0], [619.0, 12846.666666666666], [612.0, 15940.0], [611.0, 13394.0], [610.0, 14417.0], [668.0, 9648.5], [664.0, 15632.0], [644.0, 13669.0], [643.0, 10466.0], [661.0, 11416.0], [660.0, 13994.0], [659.0, 13521.333333333334], [658.0, 13295.75], [657.0, 12046.25], [655.0, 7807.5], [653.0, 12227.0], [652.0, 10831.0], [649.0, 13653.0], [703.0, 13487.0], [702.0, 11844.0], [679.0, 9713.5], [678.0, 13301.5], [675.0, 15603.0], [672.0, 14292.0], [721.0, 12994.0], [735.0, 13369.0], [731.0, 14532.0], [730.0, 13531.666666666666], [705.0, 13533.5], [704.0, 13162.0], [727.0, 11821.4], [726.0, 12970.25], [722.0, 10290.0], [720.0, 15546.0], [717.0, 15526.0], [715.0, 10029.0], [712.0, 12991.5], [762.0, 7521.5], [764.0, 11048.0], [767.0, 12512.5], [763.0, 12351.5], [761.0, 12886.0], [743.0, 11938.0], [742.0, 11276.833333333334], [740.0, 15202.0], [739.0, 11864.666666666666], [756.0, 10737.0], [753.0, 12165.0], [751.0, 13085.5], [749.0, 12113.2], [747.0, 13450.0], [746.0, 12346.0], [798.0, 11899.5], [796.0, 13035.0], [783.0, 11094.0], [781.0, 12477.0], [780.0, 13993.0], [774.0, 10094.0], [771.0, 13379.0], [768.0, 12371.4], [824.0, 14724.0], [827.0, 11123.0], [829.0, 8987.0], [825.0, 12328.666666666666], [821.0, 8321.0], [818.0, 14741.0], [815.0, 15225.0], [802.0, 11603.0], [807.0, 13081.0], [806.0, 14179.0], [814.0, 11378.0], [813.0, 10222.0], [811.0, 15225.0], [809.0, 12808.0], [863.0, 9308.0], [859.0, 13111.0], [839.0, 15185.0], [837.0, 7127.0], [834.0, 12107.5], [833.0, 12630.0], [832.0, 15209.0], [854.0, 15108.0], [852.0, 8506.75], [851.0, 8211.0], [848.0, 10117.125], [847.0, 10086.75], [846.0, 12433.5], [843.0, 11595.666666666666], [842.0, 13234.0], [841.0, 13068.0], [840.0, 13060.666666666666], [894.0, 9816.5], [893.0, 4525.0], [892.0, 5183.071428571428], [891.0, 5429.166666666667], [883.0, 7488.0], [875.0, 8223.333333333334], [923.0, 9657.0], [927.0, 8694.833333333332], [926.0, 4554.0], [924.0, 11887.0], [917.0, 14210.0], [907.0, 13294.0], [897.0, 11419.0], [906.0, 8623.333333333334], [905.0, 4669.0], [900.0, 4654.5], [899.0, 4647.333333333333], [935.0, 8534.0], [959.0, 9312.0], [955.0, 10719.0], [953.0, 11122.333333333334], [948.0, 14711.5], [943.0, 11111.5], [941.0, 12815.5], [939.0, 11241.0], [936.0, 9882.555555555555], [932.0, 7971.0], [929.0, 7675.0], [928.0, 9967.0], [989.0, 3074.0], [990.0, 4616.0], [985.0, 6803.333333333333], [967.0, 14163.0], [966.0, 14324.0], [964.0, 12001.5], [963.0, 3863.0], [962.0, 10237.0], [983.0, 9541.0], [981.0, 10324.5], [978.0, 9493.0], [979.0, 9217.05], [977.0, 3566.5], [975.0, 10367.0], [971.0, 10078.8], [969.0, 8953.0], [968.0, 3741.0], [1000.0, 8278.613053613057], [999.0, 7208.846153846152], [997.0, 6488.0], [996.0, 10652.777777777777], [992.0, 13714.0], [995.0, 8634.857142857143]], "isOverall": false, "label": "https://reqres.in/api/users?page=2", "isController": false}, {"data": [[850.7769999999994, 9471.805999999986]], "isOverall": false, "label": "https://reqres.in/api/users?page=2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 14699.166666666666, "minX": 1.69272768E12, "maxY": 46039.75, "series": [{"data": [[1.69272768E12, 46039.75]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69272768E12, 14699.166666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69272768E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 114.917, "minX": 1.69272768E12, "maxY": 9586.722999999998, "series": [{"data": [[1.69272768E12, 114.917]], "isOverall": false, "label": "https://reqres.in/api/users/2", "isController": false}, {"data": [[1.69272768E12, 9586.722999999998]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.69272768E12, 9471.805999999986]], "isOverall": false, "label": "https://reqres.in/api/users?page=2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69272768E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 114.87899999999995, "minX": 1.69272768E12, "maxY": 9120.239000000034, "series": [{"data": [[1.69272768E12, 114.87899999999995]], "isOverall": false, "label": "https://reqres.in/api/users/2", "isController": false}, {"data": [[1.69272768E12, 9120.239000000034]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.69272768E12, 9005.35999999998]], "isOverall": false, "label": "https://reqres.in/api/users?page=2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69272768E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 6.056999999999999, "minX": 1.69272768E12, "maxY": 9349.72, "series": [{"data": [[1.69272768E12, 6.056999999999999]], "isOverall": false, "label": "https://reqres.in/api/users/2", "isController": false}, {"data": [[1.69272768E12, 9349.72]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.69272768E12, 9343.663]], "isOverall": false, "label": "https://reqres.in/api/users?page=2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69272768E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.69272768E12, "maxY": 15682.0, "series": [{"data": [[1.69272768E12, 15682.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69272768E12, 12728.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69272768E12, 15175.28]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69272768E12, 13652.4]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69272768E12, 50.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69272768E12, 454.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69272768E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 70.0, "minX": 110.0, "maxY": 15961.5, "series": [{"data": [[271.0, 8044.0], [266.0, 7318.0], [521.0, 70.0], [599.0, 91.5], [110.0, 199.0], [233.0, 4114.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[521.0, 15961.5], [599.0, 15780.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 599.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 110.0, "maxY": 8043.0, "series": [{"data": [[271.0, 8043.0], [266.0, 7318.0], [521.0, 70.0], [599.0, 91.0], [110.0, 199.0], [233.0, 4114.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[521.0, 0.0], [599.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 599.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.69272762E12, "maxY": 16.666666666666668, "series": [{"data": [[1.69272762E12, 16.666666666666668], [1.69272768E12, 16.666666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69272768E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.69272768E12, "maxY": 32.85, "series": [{"data": [[1.69272768E12, 32.85]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.69272768E12, 0.21666666666666667]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.69272768E12, 0.26666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69272768E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.48333333333333334, "minX": 1.69272768E12, "maxY": 16.666666666666668, "series": [{"data": [[1.69272768E12, 16.183333333333334]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.69272768E12, 0.48333333333333334]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.69272768E12, 16.666666666666668]], "isOverall": false, "label": "https://reqres.in/api/users/2-success", "isController": false}, {"data": [[1.69272768E12, 16.183333333333334]], "isOverall": false, "label": "https://reqres.in/api/users?page=2-success", "isController": false}, {"data": [[1.69272768E12, 0.48333333333333334]], "isOverall": false, "label": "https://reqres.in/api/users?page=2-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69272768E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.9666666666666667, "minX": 1.69272768E12, "maxY": 49.03333333333333, "series": [{"data": [[1.69272768E12, 49.03333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.69272768E12, 0.9666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69272768E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

